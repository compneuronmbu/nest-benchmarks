import nest
import time
import logging
log = logging.getLogger(__name__)

def Connect(p1, p2, **kwargs):
    start = time.time()
    nest.Connect(p1, p2, **kwargs)
    log.info("%5.1f sec for connecting populations: %s", time.time()-start, kwargs)

def ConnectAll(pops):

    start_conn_time = time.time()

    Connect(pops['S1_L1_ENGC'], pops['S1_L1_ENGC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L1_ENGC'], pops['S1_L1_SBC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.83841463414713457, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L1_ENGC'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.19863725819, std_x=0.19863725819) * 0.1341706188718251, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L1_ENGC'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.21349049057200001, std_x=0.21349049057200001) * 0.64947290901699994, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L1_ENGC'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.19863725819, std_x=0.19863725819) * 0.69379548556270543, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L1_ENGC'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.19863725819, std_x=0.19863725819) * 0.1341706188718251, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L1_ENGC'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.21349049057200001, std_x=0.21349049057200001) * 0.64947290901699994, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L1_ENGC'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.19863725819, std_x=0.19863725819) * 0.69379548556270543, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L1_ENGC'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.184821601654, std_x=0.184821601654) * 0.25748759738299998, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L1_ENGC'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.184821601654, std_x=0.184821601654) * 0.25748759738299998, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L1_SBC'], pops['S1_L1_SBC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.0343224611742, std_x=0.0343224611742) * 0.086890243902181294, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L1_SBC'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.0343224611742, std_x=0.0343224611742) * 0.015111848651879247, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L1_SBC'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.0343224611742, std_x=0.0343224611742) * 0.28065982672778855, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L1_SBC'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.0343224611742, std_x=0.0343224611742) * 0.015111848651879247, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L1_SBC'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.0343224611742, std_x=0.0343224611742) * 0.28065982672778855, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.57701272248800006, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.57701272248800006, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.029143399696746015, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.035853217707999999, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.029143399696746015, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.010928774886279757, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.013444956640499999, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.010928774886279757, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.0045536562026206292, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.0056020652668799997, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_PV'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.0045536562026206292, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.35955167104999997, std_x=0.35955167104999997) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.35955167104999997, std_x=0.35955167104999997) * 0.10000000000000002, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.35955167104999997, std_x=0.35955167104999997) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.35955167104999997, std_x=0.35955167104999997) * 0.13513793362817311, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.41476803556199998, std_x=0.41476803556199998) * 0.50165678968317429, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.41476803556199998, std_x=0.41476803556199998) * 0.050165678968317438, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.41476803556199998, std_x=0.41476803556199998) * 0.50165678968317429, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.35955167104999997, std_x=0.35955167104999997) * 0.13513793362817311, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=1.2456392974499999, std_x=1.2456392974499999) * 0.080332704200151026, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=1.2456392974499999, std_x=1.2456392974499999) * 0.0080332704200151046, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=1.2456392974499999, std_x=1.2456392974499999) * 0.080332704200151026, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.39535508006300002, std_x=0.39535508006300002) * 0.48198516489781101, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.39535508006300002, std_x=0.39535508006300002) * 0.048198516489781108, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.39535508006300002, std_x=0.39535508006300002) * 0.48198516489781101, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.40916700474000001, std_x=0.40916700474000001) * 0.62551070147190679, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.40916700474000001, std_x=0.40916700474000001) * 0.06255107014719069, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.40916700474000001, std_x=0.40916700474000001) * 0.62551070147190679, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=2.1590785179799998, std_x=2.1590785179799998) * 0.047575039219876845, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L6_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=2.1590785179799998, std_x=2.1590785179799998) * 0.0047575039219876856, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L2_Pyr'], pops['S1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=2.1590785179799998, std_x=2.1590785179799998) * 0.047575039219876845, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L1_ENGC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.19863725819, std_x=0.19863725819) * 0.83993902438964929, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L1_SBC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.0343224611742, std_x=0.0343224611742) * 0.60060975609700595, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.57701272248800006, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.82609818826902226, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.57701272248800006, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.82609818826902226, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.029143399696746015, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.035853217707999999, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.010928774886279757, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.013444956640499999, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.0045536562026206292, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_SST'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.0056020652668799997, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_VIP'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.12365120926977839, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_VIP'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.17635500338476592, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_VIP'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.074751297730991303, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_VIP'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.12365120926977839, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L2_VIP'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.17635500338476592, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_VIP'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.074751297730991303, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L2_VIP'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.35608845511023618, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.25, 'delay': 1.5})
    Connect(pops['S1_L2_VIP'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.35608845511023618, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.25, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.57701272248800006, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.57701272248800006, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.029143399696746015, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.035853217707999999, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.029143399696746015, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.010928774886279757, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.013444956640499999, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.010928774886279757, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.0045536562026206292, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.0056020652668799997, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_PV'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.0045536562026206292, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.470927674608, std_x=0.470927674608) * 0.37704547165371571, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.470927674608, std_x=0.470927674608) * 0.037704547165371576, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.470927674608, std_x=0.470927674608) * 0.37704547165371571, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.36531199924899999, std_x=0.36531199924899999) * 0.13513793362817311, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.36531199924899999, std_x=0.36531199924899999) * 0.58113856804758945, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.36531199924899999, std_x=0.36531199924899999) * 0.058113856804758952, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.36531199924899999, std_x=0.36531199924899999) * 0.58113856804758945, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.36531199924899999, std_x=0.36531199924899999) * 0.13513793362817311, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.78337143434899992, std_x=0.78337143434899992) * 0.077822215211864443, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.78337143434899992, std_x=0.78337143434899992) * 0.0077822215211864462, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.78337143434899992, std_x=0.78337143434899992) * 0.077822215211864443, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.45417675397900004, std_x=0.45417675397900004) * 0.2800071690835314, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.45417675397900004, std_x=0.45417675397900004) * 0.028000716908353148, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.45417675397900004, std_x=0.45417675397900004) * 0.2800071690835314, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.397393743194, std_x=0.397393743194) * 0.50588780148359547, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.397393743194, std_x=0.397393743194) * 0.050588780148359561, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.397393743194, std_x=0.397393743194) * 0.50588780148359547, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=1.5119260221899999, std_x=1.5119260221899999) * 0.026965379755089017, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L6_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=1.5119260221899999, std_x=1.5119260221899999) * 0.0026965379755089021, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L3_Pyr'], pops['S1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=1.5119260221899999, std_x=1.5119260221899999) * 0.026965379755089017, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L1_ENGC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.19863725819, std_x=0.19863725819) * 0.83993902438964929, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L1_SBC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.0343224611742, std_x=0.0343224611742) * 0.60060975609700595, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.57701272248800006, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.82609818826902226, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.46902658886940463, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.57701272248800006, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.82609818826902226, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.029143399696746015, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.035853217707999999, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.010928774886279757, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.013444956640499999, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.0045536562026206292, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_SST'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.0056020652668799997, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_VIP'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.12365120926977839, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_VIP'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.17635500338476592, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_VIP'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.074751297730991303, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_VIP'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.12365120926977839, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L3_VIP'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.17635500338476592, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_VIP'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.074751297730991303, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L3_VIP'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.35608845511023618, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.25, 'delay': 1.5})
    Connect(pops['S1_L3_VIP'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.35608845511023618, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.25, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.20803627627273344, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.25593341826900001, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.20803627627273344, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.20803627627273344, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.25593341826900001, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.20803627627273344, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.37847563514597704, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.46561380913900002, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.37847563514597704, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.077700295957130266, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.095589589955700008, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.077700295957130266, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.01629199753939959, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.020042978539099997, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_PV'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.01629199753939959, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.58788991896000009, std_x=0.58788991896000009) * 0.060294657424174912, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.58788991896000009, std_x=0.58788991896000009) * 0.0060294657424174924, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.58788991896000009, std_x=0.58788991896000009) * 0.060294657424174912, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.25496567047500002, std_x=0.25496567047500002) * 0.80952048007485122, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.25496567047500002, std_x=0.25496567047500002) * 0.080952048007485136, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.25496567047500002, std_x=0.25496567047500002) * 0.80952048007485122, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.477430483889, std_x=0.477430483889) * 0.11348500224543148, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.477430483889, std_x=0.477430483889) * 0.011348500224543151, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.477430483889, std_x=0.477430483889) * 0.11348500224543148, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.51494699712000003, std_x=0.51494699712000003) * 0.096014965990474696, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.51494699712000003, std_x=0.51494699712000003) * 0.0096014965990474706, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.51494699712000003, std_x=0.51494699712000003) * 0.096014965990474696, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.29806018114999999, std_x=0.29806018114999999) * 0.36192666428126935, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.29806018114999999, std_x=0.29806018114999999) * 0.036192666428126942, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.29806018114999999, std_x=0.29806018114999999) * 0.36192666428126935, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.83605463892499998, std_x=0.83605463892499998) * 0.0032846448447618761, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L6_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.83605463892499998, std_x=0.83605463892499998) * 0.00032846448447618767, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L4_Pyr'], pops['S1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.83605463892499998, std_x=0.83605463892499998) * 0.0032846448447618761, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L4_SST'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.20803627627273344, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_SST'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.25593341826900001, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_SST'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.20803627627273344, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_SST'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.25593341826900001, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_SST'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.37847563514597704, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_SST'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.46561380913900002, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_SST'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.077700295957130266, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_SST'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.095589589955700008, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L4_SST'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.01629199753939959, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L4_SST'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.020042978539099997, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.047139407051480148, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.057992528024500001, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.047139407051480148, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.047139407051480148, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.057992528024500001, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.047139407051480148, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.3602797538931361, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.44322860704400002, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.3602797538931361, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.55220448260328547, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.6793410425730001, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.55220448260328547, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.11223668345559547, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.138077447677, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_PV'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.11223668345559547, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.69618475374099997, std_x=0.69618475374099997) * 0.23950500836017596, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.69618475374099997, std_x=0.69618475374099997) * 0.023950500836017602, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.69618475374099997, std_x=0.69618475374099997) * 0.23950500836017596, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.40849081112300001, std_x=0.40849081112300001) * 0.5366167593242761, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.40849081112300001, std_x=0.40849081112300001) * 0.05366167593242762, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.40849081112300001, std_x=0.40849081112300001) * 0.5366167593242761, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.85959566193299997, std_x=0.85959566193299997) * 0.15008230170825321, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.85959566193299997, std_x=0.85959566193299997) * 0.015008230170825324, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.85959566193299997, std_x=0.85959566193299997) * 0.15008230170825321, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.93036979286800003, std_x=0.93036979286800003) * 0.19123914668632405, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.93036979286800003, std_x=0.93036979286800003) * 0.019123914668632409, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.93036979286800003, std_x=0.93036979286800003) * 0.19123914668632405, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.65299950875800006, std_x=0.65299950875800006) * 0.32630738891876471, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.65299950875800006, std_x=0.65299950875800006) * 0.032630738891876475, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.65299950875800006, std_x=0.65299950875800006) * 0.32630738891876471, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.86689891757199999, std_x=0.86689891757199999) * 0.12704339463950384, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L6_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.86689891757199999, std_x=0.86689891757199999) * 0.012704339463950385, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5A_Pyr'], pops['S1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.86689891757199999, std_x=0.86689891757199999) * 0.12704339463950384, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L1_ENGC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.19863725819, std_x=0.19863725819) * 0.51735374690666813, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L1_SBC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.0343224611742, std_x=0.0343224611742) * 0.35805581613475351, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.047139407051480148, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.057992528024500001, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.5567682865480732, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.047139407051480148, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.057992528024500001, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.5567682865480732, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.3602797538931361, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.44322860704400002, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.55220448260328547, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.6793410425730001, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.11223668345559547, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5A_SST'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.138077447677, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.049848576050461495, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.061325441375000005, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.049848576050461495, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.049848576050461495, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.061325441375000005, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.049848576050461495, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.046201119266267507, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.056838213957300002, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.046201119266267507, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.43161571946119393, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.53098857775899999, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.43161571946119393, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.80365631144784266, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.98868577436299998, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.80365631144784266, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.17507792564082364, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L6_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.21538691604899998, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_PV'], pops['S1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.17507792564082364, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.97272845785200002, std_x=0.97272845785200002) * 0.16196136350923354, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.97272845785200002, std_x=0.97272845785200002) * 0.016196136350923356, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.97272845785200002, std_x=0.97272845785200002) * 0.16196136350923354, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.68264695263500008, std_x=0.68264695263500008) * 0.25617120760265771, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.68264695263500008, std_x=0.68264695263500008) * 0.025617120760265774, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.68264695263500008, std_x=0.68264695263500008) * 0.25617120760265771, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.85511773710600003, std_x=0.85511773710600003) * 0.14961121674445987, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.85511773710600003, std_x=0.85511773710600003) * 0.014961121674445989, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.85511773710600003, std_x=0.85511773710600003) * 0.14961121674445987, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.802215821898, std_x=0.802215821898) * 0.18215887095996433, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.802215821898, std_x=0.802215821898) * 0.018215887095996437, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.802215821898, std_x=0.802215821898) * 0.18215887095996433, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.69279659701499996, std_x=0.69279659701499996) * 0.26391683133616245, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.69279659701499996, std_x=0.69279659701499996) * 0.026391683133616249, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.69279659701499996, std_x=0.69279659701499996) * 0.26391683133616245, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.88169945936100014, std_x=0.88169945936100014) * 0.16267047691712452, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L6_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.88169945936100014, std_x=0.88169945936100014) * 0.016267047691712454, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L5B_Pyr'], pops['S1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.88169945936100014, std_x=0.88169945936100014) * 0.16267047691712452, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L1_ENGC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.19863725819, std_x=0.19863725819) * 0.51735374690666813, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L1_SBC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.0343224611742, std_x=0.0343224611742) * 0.35805581613475351, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.80000000000000004, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.049848576050461495, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.061325441375000005, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L2_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.5567682865480732, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.049848576050461495, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.061325441375000005, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L3_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.5567682865480732, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.046201119266267507, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.056838213957300002, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.43161571946119393, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.53098857775899999, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.80365631144784266, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.98868577436299998, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.17507792564082364, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L5B_SST'], pops['S1_L6_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.21538691604899998, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.0066471633236055176, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.0081775700934600005, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L2_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.0066471633236055176, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.0066471633236055176, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.0081775700934600005, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.0066471633236055176, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.0047479738025765304, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.0058411214953299996, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.0047479738025765304, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.011395137126190176, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.0140186915888, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.011395137126190176, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.19656611542694311, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.24182242990699998, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.19656611542694311, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.8128531150006989, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L6_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_PV'], pops['S1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.8128531150006989, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=2.03360951752, std_x=2.03360951752) * 0.0013870249069114879, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=2.03360951752, std_x=2.03360951752) * 0.0013870249069114879, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L3_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=2.03360951752, std_x=2.03360951752) * 0.0013870249069114879, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=1.8509250484099999, std_x=1.8509250484099999) * 0.00091597634274880534, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=1.8509250484099999, std_x=1.8509250484099999) * 0.00091597634274880534, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L4_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=1.8509250484099999, std_x=1.8509250484099999) * 0.00091597634274880534, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.88338428452399986, std_x=0.88338428452399986) * 0.0035652879044924604, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.88338428452399986, std_x=0.88338428452399986) * 0.0035652879044924604, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.88338428452399986, std_x=0.88338428452399986) * 0.0035652879044924604, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.79537221541199998, std_x=0.79537221541199998) * 0.0059109969746008384, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.79537221541199998, std_x=0.79537221541199998) * 0.0059109969746008384, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.79537221541199998, std_x=0.79537221541199998) * 0.0059109969746008384, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.772202778373, std_x=0.772202778373) * 0.009672332634983417, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.20499999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L6_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.772202778373, std_x=0.772202778373) * 0.009672332634983417, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.71999999999999997), 'delay': 1.5})
    Connect(pops['S1_L6_Pyr'], pops['S1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.772202778373, std_x=0.772202778373) * 0.009672332634983417, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.097500000000000003, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L2_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.0066471633236055176, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L2_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.0081775700934600005, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L3_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.0066471633236055176, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L3_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.11605676068200001, std_x=0.11605676068200001) * 0.0081775700934600005, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L4_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.0047479738025765304, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L4_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.08114954554239999, std_x=0.08114954554239999) * 0.0058411214953299996, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.011395137126190176, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L5A_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.148339355925, std_x=0.148339355925) * 0.0140186915888, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.19656611542694311, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L5B_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.14278758871, std_x=0.14278758871) * 0.24182242990699998, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 0.8128531150006989, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.73999999999999999, 'delay': 1.5})
    Connect(pops['S1_L6_SST'], pops['S1_L6_Pyr'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.17645714296200002, std_x=0.17645714296200002) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_ENGC'], pops['M1_L1_ENGC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.238794855759, std_x=0.238794855759) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_ENGC'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.238794855759, std_x=0.238794855759) * 0.2568036, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_ENGC'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.184821601654, std_x=0.184821601654) * 0.2574876, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_ENGC'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.184821601654, std_x=0.184821601654) * 0.26, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_ENGC'], pops['M1_L23_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.238794855759, std_x=0.238794855759) * 0.8, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_ENGC'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.184821601654, std_x=0.184821601654) * 0.2574876, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_ENGC'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.213490490572, std_x=0.213490490572) * 0.64947291, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_ENGC'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.184821601654, std_x=0.184821601654) * 0.2574876, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_ENGC'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.184821601654, std_x=0.184821601654) * 0.26, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_ENGC'], pops['M1_L1_SBC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.238794855759, std_x=0.238794855759) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_ENGC'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.184821601654, std_x=0.184821601654) * 0.26, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.602984130998, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0031528582013, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0244346510601, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0031528582013, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.00236464365097, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.602984130998, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0031528582013, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0244346510601, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0244346510601, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0031528582013, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0244346510601, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_PV'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.00236464365097, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.2221411607501796, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.024577926999875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.734, std_x=0.734) * 0.1082489974795388, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.020527608284875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.020687584157625, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.597, std_x=0.597) * 0.28964027031703676, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.024577926999875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.492, std_x=0.492) * 0.470111504179, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.421, std_x=0.421) * 0.790285463718, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.22654706789449905, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.024577926999875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_PT'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.372706466539117, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.800746223445194, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.053132358495125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.105841250607, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.053132358495125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.394, std_x=0.394) * 0.3573114803309028, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.0055159692765625, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.074571974101875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.601, std_x=0.601) * 0.26985601741052967, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.053132358495125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.105841250607, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.344, std_x=0.344) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.24, std_x=0.24) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.06087541465423013, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.105841250607, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CS'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.10014987572228302, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L23_VIP'], pops['M1_L23_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.3, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_VIP'], pops['M1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.616, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_VIP'], pops['M1_L23_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.616, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_VIP'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.41, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_VIP'], pops['M1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.616, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_VIP'], pops['M1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.616, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.2221411607501796, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.024577926999875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.734, std_x=0.734) * 0.1082489974795388, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.020527608284875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.020687584157625, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.597, std_x=0.597) * 0.28964027031703676, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.024577926999875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.492, std_x=0.492) * 0.470111504179, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.421, std_x=0.421) * 0.790285463718, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.22654706789449905, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.024577926999875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CC'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.372706466539117, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_SST'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.0522875816993, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_SST'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.636601307193, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_SST'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.0522875816993, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_SST'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.124183006536, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_SST'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.0522875816993, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_SST'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.636601307193, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_SST'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.857, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.74, 'delay': 1.5})
    Connect(pops['M1_L5A_SST'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.636601307193, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_SST'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.857, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.74, 'delay': 1.5})
    Connect(pops['M1_L23_SST'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0031528582013, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_SST'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0244346510601, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_SST'], pops['M1_L23_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.616, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_SST'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0031528582013, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_SST'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.00236464365097, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_SST'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.602984130998, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_SST'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0031528582013, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_SST'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0244346510601, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L23_SST'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.1, std_x=0.1) * 0.0244346510601, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.5851324125280001, std_x=0.5851324125280001) * 0.03527783531323221, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.5851324125280001, std_x=0.5851324125280001) * 0.037442002988125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.5851324125280001, std_x=0.5851324125280001) * 0.0049306303479125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.5851324125280001, std_x=0.5851324125280001) * 0.037442002988125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=1.11, std_x=1.11) * 0.038113166890037735, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.5851324125280001, std_x=0.5851324125280001) * 0.055077145496, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.5851324125280001, std_x=0.5851324125280001) * 0.00328535776295, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=1.091, std_x=1.091) * 0.1113317947814159, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.5851324125280001, std_x=0.5851324125280001) * 0.037442002988125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.5851324125280001, std_x=0.5851324125280001) * 0.0049306303479125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.839, std_x=0.839) * 0.0710308221417, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.647, std_x=0.647) * 0.169267347837, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.5851324125280001, std_x=0.5851324125280001) * 0.60784313725, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.5851324125280001, std_x=0.5851324125280001) * 0.0049306303479125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L6_CT'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.5851324125280001, std_x=0.5851324125280001) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.41, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.065289185271125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.11486494055925, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L23_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.55, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.065289185271125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.471, std_x=0.471) * 0.60784313725, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L23_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.41, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.0028718989818375, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.093128099663125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.469, std_x=0.469) * 0.60784313725, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.065289185271125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.11486494055925, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.361, std_x=0.361) * 0.632014795996, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.611, std_x=0.611) * 0.2764505774, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.03169489034452533, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.11486494055925, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L23_CC'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.46770281705500005, std_x=0.46770281705500005) * 0.0521432066962525, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5B_SST'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_SST'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.596078431373, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_SST'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_SST'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.0287581699346, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_SST'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.0915032679739, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_SST'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_SST'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.596078431373, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_SST'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.857, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.74, 'delay': 1.5})
    Connect(pops['M1_L5B_SST'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.596078431373, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.2221411607501796, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.024577926999875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.734, std_x=0.734) * 0.1082489974795388, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.020527608284875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.020687584157625, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.597, std_x=0.597) * 0.28964027031703676, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.024577926999875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.492, std_x=0.492) * 0.470111504179, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.421, std_x=0.421) * 0.790285463718, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.22654706789449905, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.024577926999875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5B_CS'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.606368829317, std_x=0.606368829317) * 0.372706466539117, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.800746223445194, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.053132358495125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.105841250607, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.053132358495125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.394, std_x=0.394) * 0.3573114803309028, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.0055159692765625, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.074571974101875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.601, std_x=0.601) * 0.26985601741052967, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.053132358495125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.105841250607, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.344, std_x=0.344) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.24, std_x=0.24) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.06087541465423013, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.105841250607, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CC'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.10014987572228302, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_PV'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.124183006536, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L5A_PV'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.0522875816993, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_PV'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.636601307193, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_PV'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.0522875816993, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_PV'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.124183006536, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_PV'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.0522875816993, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_PV'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.636601307193, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5A_PV'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.636601307193, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L5A_PV'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.0522875816993, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L5A_PV'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.131, std_x=0.131) * 0.636601307193, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L1_SBC'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.034349899622, std_x=0.034349899622) * 0.5, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.8, 'delay': 1.5})
    Connect(pops['M1_L1_SBC'], pops['M1_L23_VIP'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.034349899622, std_x=0.034349899622) * 0.43, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.8, 'delay': 1.5})
    Connect(pops['M1_L1_SBC'], pops['M1_L1_SBC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.034349899622, std_x=0.034349899622) * 0.13, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.8, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.0915032679739, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.596078431373, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.0287581699346, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.0915032679739, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.596078431373, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.596078431373, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.596078431373, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L5B_PV'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.202, std_x=0.202) * 0.0287581699346, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L6_SST'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.169956976234, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_SST'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.008898271007, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_SST'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.169956976234, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_SST'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.867581423182, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_SST'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.169956976234, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_SST'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.008898271007, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_SST'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.008898271007, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_SST'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.857, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -0.74, 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L23_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.800746223445194, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.053132358495125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.105841250607, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.053132358495125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L5A_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.394, std_x=0.394) * 0.3573114803309028, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.0055159692765625, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L23_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.074571974101875, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L5B_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.601, std_x=0.601) * 0.26985601741052967, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.053132358495125, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.105841250607, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.344, std_x=0.344) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.24, std_x=0.24) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L6_SST'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.06087541465423013, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.0975, 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.105841250607, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': nest.random.lognormal(std=1.0, mean=-0.72), 'delay': 1.5})
    Connect(pops['M1_L5A_CT'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.548013844352, std_x=0.548013844352) * 0.10014987572228302, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 0.205, 'delay': 1.5})
    Connect(pops['M1_L6_PV'], pops['M1_L5B_PT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.169956976234, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_PV'], pops['M1_L5A_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.008898271007, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_PV'], pops['M1_L5B_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.169956976234, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_PV'], pops['M1_L6_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.867581423182, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_PV'], pops['M1_L5B_CS'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.169956976234, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_PV'], pops['M1_L5A_CC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.008898271007, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_PV'], pops['M1_L5A_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.008898271007, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L6_PV'], pops['M1_L5B_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.169956976234, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['M1_L6_PV'], pops['M1_L5A_CT'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.008898271007, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.0, 'delay': 1.5})
    Connect(pops['M1_L6_PV'], pops['M1_L6_PV'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.162, std_x=0.162) * 0.867581423182, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': -1.12, 'delay': 1.5})
    Connect(pops['thalamic_nucleus_TC'], pops['thalamic_nucleus_IN'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_nucleus_TC'], pops['thalamic_reticular_neucleus_RE'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_nucleus_IN'], pops['thalamic_nucleus_TC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_reticular_neucleus_RE'], pops['thalamic_nucleus_TC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_nucleus_TC'], pops['thalamic_nucleus_IN'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_nucleus_TC'], pops['thalamic_reticular_neucleus_RE'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_nucleus_IN'], pops['thalamic_nucleus_TC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_reticular_neucleus_RE'], pops['thalamic_nucleus_TC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_nucleus_TC'], pops['thalamic_nucleus_IN'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_nucleus_TC'], pops['thalamic_reticular_neucleus_RE'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_nucleus_IN'], pops['thalamic_nucleus_TC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_reticular_neucleus_RE'], pops['thalamic_nucleus_TC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_nucleus_TC'], pops['thalamic_nucleus_IN'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_nucleus_TC'], pops['thalamic_reticular_neucleus_RE'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_nucleus_IN'], pops['thalamic_nucleus_TC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['thalamic_reticular_neucleus_RE'], pops['thalamic_nucleus_TC'], conn_spec={'allow_autapses': False, 'p': nest.distributions.gaussian2D(nest.spatial.distance.x, nest.spatial.distance.y, std_y=0.01, std_x=0.01) * 1.0, 'rule': 'pairwise_bernoulli', 'allow_multapses': False, 'mask': {'box': {'lower_left': [-2.0, -2.0, -2.0], 'upper_right': [2.0, 2.0, 2.0]}}}, syn_spec={'weight': 1.0, 'delay': 1.0})
    Connect(pops['go'], pops['gr'], conn_spec={'p': 0.025, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.15, -0.15, -0.5], 'upper_right': [0.15, 0.15, 0.5]}}}, syn_spec={'weight': -0.24080000000000001})
    Connect(pops['gr'], pops['go'], conn_spec={'p': 0.05, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.1, -0.1, -0.1], 'upper_right': [0.1, 0.1, 0.1]}}}, syn_spec={'weight': 0.00091000000000000011})
    Connect(pops['gr'], pops['pkj'], conn_spec={'p': 1.0, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.5, -0.1, -0.5], 'upper_right': [0.5, 0.1, 0.5]}}}, syn_spec={'weight': 0.0070000000000000001})
    Connect(pops['gr'], pops['bs'], conn_spec={'p': 1.0, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.5, -0.1, -0.5], 'upper_right': [0.5, 0.1, 0.5]}}}, syn_spec={'weight': 0.0017})
    Connect(pops['pkj'], pops['vn'], conn_spec={'p': 1.0, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.1, -0.25, -0.5], 'upper_right': [0.1, 0.25, 0.5]}}}, syn_spec={'weight': -0.01806})
    Connect(pops['bs'], pops['pkj'], conn_spec={'p': 1.0, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.1, -0.25, -0.5], 'upper_right': [0.1, 0.25, 0.5]}}}, syn_spec={'weight': -1.0499999999999998})
    Connect(pops['pons'], pops['gr'], conn_spec={'p': 0.5, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.05, -0.05, -0.5], 'upper_right': [0.05, 0.05, 0.5]}}}, syn_spec={'weight': 0.097199999999999995})
    Connect(pops['go'], pops['gr'], conn_spec={'p': 0.025, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.15, -0.15, -0.5], 'upper_right': [0.15, 0.15, 0.5]}}}, syn_spec={'weight': -0.24080000000000001})
    Connect(pops['gr'], pops['go'], conn_spec={'p': 0.05, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.1, -0.1, -0.1], 'upper_right': [0.1, 0.1, 0.1]}}}, syn_spec={'weight': 0.00091000000000000011})
    Connect(pops['gr'], pops['pkj'], conn_spec={'p': 1.0, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.5, -0.1, -0.5], 'upper_right': [0.5, 0.1, 0.5]}}}, syn_spec={'weight': 0.0070000000000000001})
    Connect(pops['gr'], pops['bs'], conn_spec={'p': 1.0, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.5, -0.1, -0.5], 'upper_right': [0.5, 0.1, 0.5]}}}, syn_spec={'weight': 0.0017})
    Connect(pops['pkj'], pops['vn'], conn_spec={'p': 1.0, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.1, -0.25, -0.5], 'upper_right': [0.1, 0.25, 0.5]}}}, syn_spec={'weight': -0.01806})
    Connect(pops['bs'], pops['pkj'], conn_spec={'p': 1.0, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.1, -0.25, -0.5], 'upper_right': [0.1, 0.25, 0.5]}}}, syn_spec={'weight': -1.0499999999999998})
    Connect(pops['pons'], pops['gr'], conn_spec={'p': 0.5, 'rule': 'pairwise_bernoulli',  'mask': {'box': {'lower_left': [-0.05, -0.05, -0.5], 'upper_right': [0.05, 0.05, 0.5]}}}, syn_spec={'weight': 0.097199999999999995})
    #Connect(pops['GPi2d'], pops['GPi3d'], conn_spec=default_dict)
    Connect(pops['CMPf'], pops['FSI'], conn_spec={'indegree': 56,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': 2.7539198322519516, 'delay': 7.0})
    Connect(pops['CMPf'], pops['FSI'], syn_spec={'weight': 0.068847995806298787, 'delay': 7.0, 'model': 'static_synapse'})
    Connect(pops['CMPf'], pops['GPe'], conn_spec={'indegree': 9,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': 3.0, 'delay': 7.0})
    Connect(pops['CMPf'], pops['GPe'], syn_spec={'weight': 0.075000000000000011, 'delay': 7.0, 'model': 'static_synapse'})
    Connect(pops['CMPf'], pops['GPi'], conn_spec={'indegree': 26,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': 1.2225312378437285, 'delay': 7.0})
    Connect(pops['CMPf'], pops['GPi'], syn_spec={'weight': 0.030563280946093216, 'delay': 7.0, 'model': 'static_synapse'})
    Connect(pops['CMPf'], pops['MSN'], conn_spec={'indegree': 5,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': 2.3060626609762966, 'delay': 7.0})
    Connect(pops['CMPf'], pops['MSN'], syn_spec={'weight': 0.057651566524407422, 'delay': 7.0, 'model': 'static_synapse'})
    Connect(pops['CMPf'], pops['STN'], conn_spec={'indegree': 28,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': 1.9909312966748962, 'delay': 7.0})
    Connect(pops['CMPf'], pops['STN'], syn_spec={'weight': 0.049773282416872407, 'delay': 7.0, 'model': 'static_synapse'})
    Connect(pops['CSN'], pops['FSI'], conn_spec={'indegree': 83,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 0.15}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': 1.2453289839890098, 'delay': 7.0})
    Connect(pops['CSN'], pops['FSI'], syn_spec={'weight': 0.031133224599725246, 'delay': 7.0, 'model': 'static_synapse'})
    #Connect(pops['CSN'], pops['MSN'], conn_spec={'indegree': 114,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 0.15}}}, syn_spec={'synapse_model': 'stdp_dopamine_synapse_lbl','weight': 1.6079231767797206, 'delay': 7.0})
    Connect(pops['CSN'], pops['MSN'], syn_spec={'weight': 0.040198079419493021, 'delay': 7.0, 'model': 'static_synapse'})
    Connect(pops['FSI'], pops['FSI'], conn_spec={'indegree': 38,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': -0.59927598437148322, 'delay': 1.0})
    Connect(pops['FSI'], pops['MSN'], conn_spec={'indegree': 29,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': -0.62041549812110519, 'delay': 1.0})
    Connect(pops['GPe'], pops['FSI'], conn_spec={'indegree': 8,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': -0.36671330846927958, 'delay': 3.0})
    Connect(pops['GPe'], pops['GPe'], conn_spec={'indegree': 10,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': -0.74142322859717957, 'delay': 1.0})
    Connect(pops['GPe'], pops['GPi'], conn_spec={'indegree': 7,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': -0.57972704939236919, 'delay': 3.0})
    #Connect(pops['GPe'], pops['STN'], conn_spec={'indegree': 20,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 0.15}}, 'delay': 10.0}), syn_spec={'synapse_model': 'static_synapse_lbl','weight': -0.46059090139390085})
    Connect(pops['GPe'], pops['STN'], conn_spec={'indegree': 20,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 0.9}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': -0.46059090139390085, 'delay': 10.0})
    Connect(pops['MSN'], pops['GPe'], conn_spec={'indegree': 6006,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 0.15}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': -0.46386012978101365, 'delay': 7.0})
    Connect(pops['MSN'], pops['GPi'], conn_spec={'indegree': 10576,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 0.15}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': -0.25909431044990716, 'delay': 11.0})
    Connect(pops['MSN'], pops['MSN'], conn_spec={'indegree': 70,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': -0.41758659419884503, 'delay': 1.0})
    Connect(pops['PTN'], pops['FSI'], conn_spec={'indegree': 1,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 0.15}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': 1.3323956948794307, 'delay': 3.0})
    Connect(pops['PTN'], pops['FSI'], syn_spec={'weight': 0.033309892371985769, 'delay': 3.0, 'model': 'static_synapse'})
    #Connect(pops['PTN'], pops['MSN'], conn_spec={'indegree': 1,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 0.15}}}, syn_spec={'synapse_model': 'stdp_dopamine_synapse_lbl','weight': 1.6053395769930954, 'delay': 3.0})
    Connect(pops['PTN'], pops['MSN'], syn_spec={'weight': 0.04013348942482739, 'delay': 3.0, 'model': 'static_synapse'})
    Connect(pops['PTN'], pops['STN'], conn_spec={'indegree': 86,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 0.15}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': 1.623975864630443, 'delay': 3.0})
    Connect(pops['PTN'], pops['STN'], syn_spec={'weight': 0.040599396615761077, 'delay': 3.0, 'model': 'static_synapse'})
    Connect(pops['STN'], pops['GPe'], conn_spec={'indegree': 32,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': 2.4702999400619534, 'delay': 3.0})
    Connect(pops['STN'], pops['GPe'], syn_spec={'weight': 0.061757498501548838, 'delay': 3.0, 'model': 'static_synapse'})
    Connect(pops['STN'], pops['GPi'], conn_spec={'indegree': 30,  'rule': 'fixed_indegree', 'allow_oversized_mask': True,  'allow_multapses': True, 'mask': {'circular': {'radius': 2.0}}}, syn_spec={'synapse_model': 'static_synapse_lbl','weight': 1.0324537798093458, 'delay': 3.0})
    Connect(pops['STN'], pops['GPi'], syn_spec={'weight': 0.025811344495233646, 'delay': 3.0, 'model': 'static_synapse'})

    #log.info(" sec for connecting ALL populations: %5.1f", time.time() - start_conn_time)
    #log.info(" number of connections: %5.1d", nest.GetpStatus('num_connections'))

    t_end = time.time() - start_conn_time
    print('{} # num_connections'.format(nest.GetpStatus('num_connections')))
    print('{} # build_edge_time'.format(t_end))
    print('{} # virt_mem_after_edges'.format(nest.ll_api.sli_func('memory_thisjob')))
