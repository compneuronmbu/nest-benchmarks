#!/bin/sh
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

echo "This is a SAMPLE run script for running a shared-memory version of"
echo "Intel(R) Distribution for LINPACK* Benchmark. Change it to reflect"
echo "the correct number of CPUs/threads, problem input files, etc.."
echo "*Other names and brands may be claimed as the property of others."

# Turn on Automatic Offload mode
export MKL_MIC_ENABLE=1

test -n "$MKLROOT" || export MKLROOT=../../

isknl=`micinfo 2> /dev/null | grep -i -m 1 "device serial number" | grep "KL[1-9]" | wc -l`

if [ $isknl -eq 1 ]; then
    # Setting path to binaries for Intel(R) Xeon Phi(TM) coprocessor side (libmkl_ao_worker.so and libiomp5.so)
    export MIC_LD_LIBRARY_PATH=$MKLROOT/lib/intel64:$MIC_LD_LIBRARY_PATH
    export MIC_LD_LIBRARY_PATH=$MKLROOT/../compiler/lib/intel64:$MIC_LD_LIBRARY_PATH
    # Setting path to Intel(R) Xeon Phi(TM) coprocessor interface library
    export MIC_LD_LIBRARY_PATH=/lib64:$MIC_LD_LIBRARY_PATH
    export LD_LIBRARY_PATH=$MKLROOT/lib/intel64:$LD_LIBRARY_PATH
    export LD_LIBRARY_PATH=$MKLROOT/../compiler/lib/intel64:$LD_LIBRARY_PATH
else
    # Setting path to binaries for Intel(R) Xeon Phi(TM) coprocessor side (libmkl_ao_worker.so and libiomp5.so)
    export MIC_LD_LIBRARY_PATH=$MKLROOT/lib/mic:$MIC_LD_LIBRARY_PATH
    export MIC_LD_LIBRARY_PATH=$MKLROOT/../compiler/lib/mic:$MIC_LD_LIBRARY_PATH
    export MIC_LD_LIBRARY_PATH=$MKLROOT/lib/intel64_lin_mic:$MIC_LD_LIBRARY_PATH
    export MIC_LD_LIBRARY_PATH=$MKLROOT/../compiler/lib/intel64_lin_mic:$MIC_LD_LIBRARY_PATH
    # Setting path to Intel(R) Xeon Phi(TM) coprocessor interface library
    export MIC_LD_LIBRARY_PATH=/opt/intel/mic/coi/device-linux-release/lib:$MIC_LD_LIBRARY_PATH
    export LD_LIBRARY_PATH=/opt/intel/mic/coi/host-linux-release/lib:$LD_LIBRARY_PATH
fi

# Checking presence of libraries required for AO
error=""
for f in libcoi_host.so.0 libiomp5.so libmkl_ao_worker.so; do
        found=""
        for d in $(echo $MIC_LD_LIBRARY_PATH $LD_LIBRARY_PATH| sed 's/:/ /g'); do
                test -f "$d/$f" && found=1
        done
        if test -z "$found"; then
                error=1
                echo " ** Error: required library $f not found in MIC_LD_LIBRARY_PATH or LD_LIBRARY_PATH"
        fi
done
test -n "$error" && echo "AO required libs not present. Forcing exit..." && exit -1

# Setting up affinity for better threading performance
export KMP_AFFINITY=nowarnings,compact,1,0,granularity=fine

if [ $isknl -eq 1 ]; then
    # Setting up affinity for better threading performance on Intel(R) Xeon Phi(TM) coprocessor side for KNL
    export MIC_KMP_AFFINITY=nowarnings,compact,1,0,granularity=fine
else
    # Setting up affinity for better threading performance on Intel(R) Xeon Phi(TM) coprocessor side
    export MIC_KMP_AFFINITY=compact,granularity=fine
    # Amount of pre-allocated memory (as much as possible by default) on Intel(R) Xeon Phi(TM) coprocessor
    export MKL_MIC_MAX_MEMORY=16G
fi

# Limit the number of CPU threads so that Intel(R) Xeon Phi(TM) coprocessor will get most of work
#export OMP_NUM_THREADS=1

# Force LINPACK to stop if Intel(R) Xeon Phi(TM) coprocessor can't be used
#export MKL_MIC_DISABLE_HOST_FALLBACK=1

# Number of cards for calculation
export OFFLOAD_DEVICES=0,1

date
date > lin_xeon64_ao.txt
./xlinpack_xeon64 lininput_xeon64_ao | tee -a lin_xeon64_ao.txt
date >> lin_xeon64_ao.txt
echo -n "Done: "
