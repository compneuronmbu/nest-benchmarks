This run was done on: Fri Feb  2 17:16:01 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
1000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MKLROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl
MANPATH=/opt/intel/man/common:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/man:/opt/intel/documentation_2017/en/debugger//gdb-ia/man/:/opt/intel/documentation_2017/en/debugger//gdb-mic/man/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/man/:/usr/local/share/man:/usr/share/man/overrides:/usr/share/man:
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
IPPROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp
INTEL_LICENSE_FILE=/opt/intel/compilers_and_libraries_2017.6.256/linux/licenses:/opt/intel/licenses:/home/lmontigny/intel/licenses
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.75 58557 22
TMPDIR=/tmp
GDBSERVER_MIC=/opt/intel/debugger_2017/gdb/targets/mic/bin/gdbserver
LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
MIC_LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/debugger_2017/iga/lib:/opt/intel/debugger_2017/libipt/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
MIC_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
CPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/include
MPI_PER_NODE=2
NUMMIC=2
NLSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64/locale/%l_%t/%N:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64_mic/share/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64/share/locale/%l_%t/%N
PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/bin/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/bin:/opt/intel/debugger_2017/gdb/intel64_mic/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
LC_IDENTIFICATION=fr_FR.UTF-8
TBBROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
LANG=en_US.UTF-8
GDB_CROSS=/opt/intel/debugger_2017/gdb/intel64_mic/bin/gdb-mic
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=
DAALROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/daal
HISTCONTROL=ignoredups
MPM_LAUNCHER=/opt/intel/debugger_2017/mpm/mic/bin/start_mpm.sh
INTEL_PYTHONHOME=/opt/intel/debugger_2017/python/intel64/
HOME=/home/lmontigny
SHLVL=2
LOGNAME=lmontigny
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.75 58557 10.237.240.141 22
CLASSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib/mpi.jar:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/daal.jar
MODULESHOME=/usr/share/Modules
LESSOPEN=||/usr/bin/lesspipe.sh %s
INFOPATH=/opt/intel/documentation_2017/en/debugger//gdb-ia/info/:/opt/intel/documentation_2017/en/debugger//gdb-mic/info/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/info/
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
I_MPI_ROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
MPI_RANK_FOR_NODE=0 NODE=0, CORE=, MIC=0, SHARE=
MPI_RANK_FOR_NODE=1 NODE=1, CORE=, MIC=1, SHARE=
Number of Intel(R) Xeon Phi(TM) coprocessors : 0
================================================================================
HPLinpack 2.1  --  High-Performance Linpack benchmark  --   October 26, 2012
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :    1000 
NB       :     192 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

skl2            : Column=000192 Fraction=0.005 Kernel=    0.00 Mflops=62006.21
skl2            : Column=000384 Fraction=0.195 Kernel=42843.49 Mflops=52929.95
skl2            : Column=000576 Fraction=0.385 Kernel=28079.66 Mflops=45989.78
skl2            : Column=000768 Fraction=0.595 Kernel=13895.52 Mflops=40023.28
skl2            : Column=000960 Fraction=0.795 Kernel= 3861.03 Mflops=35851.51
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2        1000   192     1     1               0.02            3.40414e+01
HPL_pdgesv() start time Fri Feb  2 17:16:01 2018

HPL_pdgesv() end time   Fri Feb  2 17:16:02 2018

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=        0.0059446 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb  2 17:16:02 CET 2018
This run was done on: Fri Feb  2 17:16:54 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
10000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MKLROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl
MANPATH=/opt/intel/man/common:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/man:/opt/intel/documentation_2017/en/debugger//gdb-ia/man/:/opt/intel/documentation_2017/en/debugger//gdb-mic/man/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/man/:/usr/local/share/man:/usr/share/man/overrides:/usr/share/man:
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
IPPROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp
INTEL_LICENSE_FILE=/opt/intel/compilers_and_libraries_2017.6.256/linux/licenses:/opt/intel/licenses:/home/lmontigny/intel/licenses
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.75 58557 22
TMPDIR=/tmp
GDBSERVER_MIC=/opt/intel/debugger_2017/gdb/targets/mic/bin/gdbserver
LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
MIC_LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/debugger_2017/iga/lib:/opt/intel/debugger_2017/libipt/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
MIC_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
CPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/include
MPI_PER_NODE=2
NUMMIC=2
NLSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64/locale/%l_%t/%N:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64_mic/share/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64/share/locale/%l_%t/%N
PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/bin/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/bin:/opt/intel/debugger_2017/gdb/intel64_mic/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
LC_IDENTIFICATION=fr_FR.UTF-8
TBBROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
LANG=en_US.UTF-8
GDB_CROSS=/opt/intel/debugger_2017/gdb/intel64_mic/bin/gdb-mic
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=
DAALROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/daal
HISTCONTROL=ignoredups
MPM_LAUNCHER=/opt/intel/debugger_2017/mpm/mic/bin/start_mpm.sh
INTEL_PYTHONHOME=/opt/intel/debugger_2017/python/intel64/
HOME=/home/lmontigny
SHLVL=2
LOGNAME=lmontigny
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.75 58557 10.237.240.141 22
CLASSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib/mpi.jar:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/daal.jar
MODULESHOME=/usr/share/Modules
LESSOPEN=||/usr/bin/lesspipe.sh %s
INFOPATH=/opt/intel/documentation_2017/en/debugger//gdb-ia/info/:/opt/intel/documentation_2017/en/debugger//gdb-mic/info/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/info/
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
I_MPI_ROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
MPI_RANK_FOR_NODE=0 NODE=0, CORE=, MIC=0, SHARE=
MPI_RANK_FOR_NODE=1 NODE=1, CORE=, MIC=1, SHARE=
Number of Intel(R) Xeon Phi(TM) coprocessors : 0
================================================================================
HPLinpack 2.1  --  High-Performance Linpack benchmark  --   October 26, 2012
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   10000 
NB       :     192 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

skl2            : Column=000192 Fraction=0.005 Kernel=    0.00 Mflops=1237477.00
skl2            : Column=000384 Fraction=0.020 Kernel=1126981.07 Mflops=1180727.20
skl2            : Column=000576 Fraction=0.040 Kernel=1156946.61 Mflops=1173006.92
skl2            : Column=000768 Fraction=0.060 Kernel=1136476.83 Mflops=1164207.92
skl2            : Column=000960 Fraction=0.080 Kernel=1117042.23 Mflops=1155230.70
skl2            : Column=001152 Fraction=0.100 Kernel=1116256.44 Mflops=1149214.36
skl2            : Column=001344 Fraction=0.120 Kernel=1090925.57 Mflops=1141556.74
skl2            : Column=001536 Fraction=0.135 Kernel=1041496.86 Mflops=1129917.30
skl2            : Column=001728 Fraction=0.155 Kernel=1096304.03 Mflops=1126706.56
skl2            : Column=001920 Fraction=0.175 Kernel=1006050.52 Mflops=1115800.91
skl2            : Column=002112 Fraction=0.195 Kernel=1069658.68 Mflops=1112340.85
skl2            : Column=002304 Fraction=0.215 Kernel=1033825.88 Mflops=1106937.92
skl2            : Column=002496 Fraction=0.235 Kernel=1006120.38 Mflops=1100583.62
skl2            : Column=002688 Fraction=0.250 Kernel=951228.42 Mflops=1091687.07
skl2            : Column=002880 Fraction=0.270 Kernel=918566.24 Mflops=1082114.81
skl2            : Column=003072 Fraction=0.290 Kernel=901181.27 Mflops=1072942.76
skl2            : Column=003264 Fraction=0.310 Kernel=876352.36 Mflops=1063702.92
skl2            : Column=003456 Fraction=0.330 Kernel=842072.91 Mflops=1053915.11
skl2            : Column=003648 Fraction=0.350 Kernel=844660.61 Mflops=1045573.53
skl2            : Column=003840 Fraction=0.365 Kernel=829151.15 Mflops=1037605.02
skl2            : Column=004032 Fraction=0.385 Kernel=763831.55 Mflops=1027696.26
skl2            : Column=004224 Fraction=0.405 Kernel=767851.87 Mflops=1019210.35
skl2            : Column=004416 Fraction=0.425 Kernel=720515.50 Mflops=1009790.23
skl2            : Column=004608 Fraction=0.445 Kernel=710260.22 Mflops=1001103.66
skl2            : Column=004800 Fraction=0.465 Kernel=659121.08 Mflops=991432.54
skl2            : Column=004992 Fraction=0.480 Kernel=695357.25 Mflops=984240.03
skl2            : Column=005184 Fraction=0.515 Kernel=601463.98 Mflops=974535.64
skl2            : Column=005376 Fraction=0.535 Kernel=635716.33 Mflops=967193.95
skl2            : Column=005568 Fraction=0.555 Kernel=555224.81 Mflops=957997.58
skl2            : Column=005760 Fraction=0.575 Kernel=527914.21 Mflops=948933.35
skl2            : Column=005952 Fraction=0.595 Kernel=512070.32 Mflops=940431.95
skl2            : Column=006336 Fraction=0.615 Kernel=470796.95 Mflops=923816.83
skl2            : Column=006528 Fraction=0.635 Kernel=424205.29 Mflops=915562.35
skl2            : Column=006720 Fraction=0.655 Kernel=406169.55 Mflops=907812.59
skl2            : Column=006912 Fraction=0.675 Kernel=376538.44 Mflops=900168.71
skl2            : Column=007104 Fraction=0.695 Kernel=351503.82 Mflops=892801.46
skl2            : Column=008064 Fraction=0.795 Kernel=281606.09 Mflops=860750.48
skl2            : Column=009024 Fraction=0.895 Kernel=154709.87 Mflops=836574.15
skl2            : Column=009984 Fraction=0.995 Kernel=40172.11 Mflops=821434.07
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       10000   192     1     1               0.82            8.14402e+02
HPL_pdgesv() start time Fri Feb  2 17:16:55 2018

HPL_pdgesv() end time   Fri Feb  2 17:16:55 2018

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=        0.0054609 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb  2 17:16:56 CET 2018
This run was done on: Fri Feb  2 17:17:05 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
20000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MKLROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl
MANPATH=/opt/intel/man/common:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/man:/opt/intel/documentation_2017/en/debugger//gdb-ia/man/:/opt/intel/documentation_2017/en/debugger//gdb-mic/man/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/man/:/usr/local/share/man:/usr/share/man/overrides:/usr/share/man:
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
IPPROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp
INTEL_LICENSE_FILE=/opt/intel/compilers_and_libraries_2017.6.256/linux/licenses:/opt/intel/licenses:/home/lmontigny/intel/licenses
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.75 58557 22
TMPDIR=/tmp
GDBSERVER_MIC=/opt/intel/debugger_2017/gdb/targets/mic/bin/gdbserver
LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
MIC_LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/debugger_2017/iga/lib:/opt/intel/debugger_2017/libipt/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
MIC_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
CPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/include
MPI_PER_NODE=2
NUMMIC=2
NLSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64/locale/%l_%t/%N:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64_mic/share/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64/share/locale/%l_%t/%N
PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/bin/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/bin:/opt/intel/debugger_2017/gdb/intel64_mic/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
LC_IDENTIFICATION=fr_FR.UTF-8
TBBROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
LANG=en_US.UTF-8
GDB_CROSS=/opt/intel/debugger_2017/gdb/intel64_mic/bin/gdb-mic
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=
DAALROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/daal
HISTCONTROL=ignoredups
MPM_LAUNCHER=/opt/intel/debugger_2017/mpm/mic/bin/start_mpm.sh
INTEL_PYTHONHOME=/opt/intel/debugger_2017/python/intel64/
HOME=/home/lmontigny
SHLVL=2
LOGNAME=lmontigny
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.75 58557 10.237.240.141 22
CLASSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib/mpi.jar:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/daal.jar
MODULESHOME=/usr/share/Modules
LESSOPEN=||/usr/bin/lesspipe.sh %s
INFOPATH=/opt/intel/documentation_2017/en/debugger//gdb-ia/info/:/opt/intel/documentation_2017/en/debugger//gdb-mic/info/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/info/
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
I_MPI_ROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
MPI_RANK_FOR_NODE=1 NODE=1, CORE=, MIC=1, SHARE=
MPI_RANK_FOR_NODE=0 NODE=0, CORE=, MIC=0, SHARE=
Number of Intel(R) Xeon Phi(TM) coprocessors : 0
================================================================================
HPLinpack 2.1  --  High-Performance Linpack benchmark  --   October 26, 2012
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   20000 
NB       :     192 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

skl2            : Column=000192 Fraction=0.005 Kernel=    0.00 Mflops=2511068.69
skl2            : Column=000384 Fraction=0.010 Kernel=1668802.68 Mflops=2008999.03
skl2            : Column=000576 Fraction=0.020 Kernel=1389826.53 Mflops=1753645.20
skl2            : Column=000768 Fraction=0.030 Kernel=1417418.19 Mflops=1658187.85
skl2            : Column=000960 Fraction=0.040 Kernel=1399422.90 Mflops=1601287.54
skl2            : Column=001152 Fraction=0.050 Kernel=1373819.18 Mflops=1560342.39
skl2            : Column=001344 Fraction=0.060 Kernel=1803551.94 Mflops=1589147.41
skl2            : Column=001536 Fraction=0.070 Kernel=1340824.71 Mflops=1555624.68
skl2            : Column=001728 Fraction=0.080 Kernel=1337923.55 Mflops=1530153.32
skl2            : Column=001920 Fraction=0.090 Kernel=1518306.79 Mflops=1529067.00
skl2            : Column=002112 Fraction=0.100 Kernel=1483466.16 Mflops=1525229.74
skl2            : Column=002304 Fraction=0.110 Kernel=1493457.32 Mflops=1522826.98
skl2            : Column=002496 Fraction=0.120 Kernel=1298570.92 Mflops=1505238.27
skl2            : Column=002688 Fraction=0.125 Kernel=1667210.55 Mflops=1514372.44
skl2            : Column=002880 Fraction=0.135 Kernel=1270714.08 Mflops=1497929.63
skl2            : Column=003072 Fraction=0.145 Kernel=1622975.45 Mflops=1504072.64
skl2            : Column=003264 Fraction=0.155 Kernel=1369381.62 Mflops=1496819.18
skl2            : Column=003456 Fraction=0.165 Kernel=1402839.43 Mflops=1492226.83
skl2            : Column=003648 Fraction=0.175 Kernel=1394400.47 Mflops=1487743.28
skl2            : Column=003840 Fraction=0.185 Kernel=1613064.18 Mflops=1492412.42
skl2            : Column=004032 Fraction=0.195 Kernel=1272645.53 Mflops=1482724.72
skl2            : Column=004224 Fraction=0.205 Kernel=1244879.75 Mflops=1472701.89
skl2            : Column=004416 Fraction=0.215 Kernel=1405176.02 Mflops=1470328.05
skl2            : Column=004608 Fraction=0.225 Kernel=1424310.96 Mflops=1468821.89
skl2            : Column=004800 Fraction=0.235 Kernel=1400149.25 Mflops=1466661.90
skl2            : Column=004992 Fraction=0.240 Kernel=1393827.94 Mflops=1464485.11
skl2            : Column=005184 Fraction=0.250 Kernel=1355101.28 Mflops=1461302.81
skl2            : Column=005376 Fraction=0.260 Kernel=1331631.31 Mflops=1457666.91
skl2            : Column=005568 Fraction=0.270 Kernel=1315160.65 Mflops=1453832.00
skl2            : Column=005760 Fraction=0.280 Kernel=1301663.44 Mflops=1449907.15
skl2            : Column=005952 Fraction=0.290 Kernel=1293376.55 Mflops=1446049.51
skl2            : Column=006144 Fraction=0.300 Kernel=1286859.82 Mflops=1442303.08
skl2            : Column=006336 Fraction=0.310 Kernel=1278474.40 Mflops=1438613.29
skl2            : Column=006528 Fraction=0.320 Kernel=1291392.21 Mflops=1435489.39
skl2            : Column=006720 Fraction=0.330 Kernel=1302870.72 Mflops=1432832.82
skl2            : Column=006912 Fraction=0.340 Kernel=1320028.29 Mflops=1430706.93
skl2            : Column=007104 Fraction=0.350 Kernel=1263788.23 Mflops=1427576.08
skl2            : Column=007296 Fraction=0.360 Kernel=1319346.34 Mflops=1425720.92
skl2            : Column=007488 Fraction=0.365 Kernel=1309760.27 Mflops=1423810.33
skl2            : Column=007680 Fraction=0.375 Kernel=1249445.28 Mflops=1420937.91
skl2            : Column=007872 Fraction=0.385 Kernel=1274303.74 Mflops=1418677.51
skl2            : Column=008064 Fraction=0.395 Kernel=1242654.99 Mflops=1416022.36
skl2            : Column=008256 Fraction=0.405 Kernel=1236986.72 Mflops=1413433.27
skl2            : Column=008448 Fraction=0.415 Kernel=1240731.33 Mflops=1411056.57
skl2            : Column=008640 Fraction=0.425 Kernel=1219800.45 Mflops=1408501.50
skl2            : Column=008832 Fraction=0.435 Kernel=1207847.87 Mflops=1405918.03
skl2            : Column=009024 Fraction=0.445 Kernel=1179276.65 Mflops=1403066.61
skl2            : Column=009216 Fraction=0.455 Kernel=1183034.86 Mflops=1400433.89
skl2            : Column=009408 Fraction=0.465 Kernel=1211819.97 Mflops=1398331.48
skl2            : Column=009600 Fraction=0.475 Kernel=1139523.33 Mflops=1395406.27
skl2            : Column=009792 Fraction=0.480 Kernel=1184771.81 Mflops=1393222.36
skl2            : Column=009984 Fraction=0.490 Kernel=1144950.07 Mflops=1390683.26
skl2            : Column=010368 Fraction=0.515 Kernel=1134975.73 Mflops=1385797.95
skl2            : Column=010752 Fraction=0.535 Kernel=1121231.08 Mflops=1381156.42
skl2            : Column=011136 Fraction=0.555 Kernel=1081367.56 Mflops=1376220.29
skl2            : Column=011520 Fraction=0.575 Kernel=1067697.62 Mflops=1371573.39
skl2            : Column=011904 Fraction=0.595 Kernel=1038622.30 Mflops=1366930.20
skl2            : Column=012480 Fraction=0.615 Kernel=980934.08 Mflops=1359486.82
skl2            : Column=012864 Fraction=0.635 Kernel=985116.89 Mflops=1355313.56
skl2            : Column=013248 Fraction=0.655 Kernel=973912.04 Mflops=1351490.52
skl2            : Column=013632 Fraction=0.675 Kernel=852524.25 Mflops=1346442.79
skl2            : Column=014016 Fraction=0.695 Kernel=876240.20 Mflops=1342376.07
skl2            : Column=015936 Fraction=0.795 Kernel=681236.55 Mflops=1318636.92
skl2            : Column=018048 Fraction=0.895 Kernel=377305.14 Mflops=1294519.64
skl2            : Column=019968 Fraction=0.995 Kernel=116368.50 Mflops=1282448.37
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       20000   192     1     1               4.18            1.27525e+03
HPL_pdgesv() start time Fri Feb  2 17:17:06 2018

HPL_pdgesv() end time   Fri Feb  2 17:17:10 2018

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=        0.0050879 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb  2 17:17:11 CET 2018
This run was done on: Fri Feb  2 17:17:28 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
40000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MKLROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl
MANPATH=/opt/intel/man/common:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/man:/opt/intel/documentation_2017/en/debugger//gdb-ia/man/:/opt/intel/documentation_2017/en/debugger//gdb-mic/man/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/man/:/usr/local/share/man:/usr/share/man/overrides:/usr/share/man:
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
IPPROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp
INTEL_LICENSE_FILE=/opt/intel/compilers_and_libraries_2017.6.256/linux/licenses:/opt/intel/licenses:/home/lmontigny/intel/licenses
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.75 58557 22
TMPDIR=/tmp
GDBSERVER_MIC=/opt/intel/debugger_2017/gdb/targets/mic/bin/gdbserver
LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
MIC_LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/debugger_2017/iga/lib:/opt/intel/debugger_2017/libipt/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
MIC_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
CPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/include
MPI_PER_NODE=2
NUMMIC=2
NLSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64/locale/%l_%t/%N:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64_mic/share/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64/share/locale/%l_%t/%N
PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/bin/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/bin:/opt/intel/debugger_2017/gdb/intel64_mic/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
LC_IDENTIFICATION=fr_FR.UTF-8
TBBROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
LANG=en_US.UTF-8
GDB_CROSS=/opt/intel/debugger_2017/gdb/intel64_mic/bin/gdb-mic
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=
DAALROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/daal
HISTCONTROL=ignoredups
MPM_LAUNCHER=/opt/intel/debugger_2017/mpm/mic/bin/start_mpm.sh
INTEL_PYTHONHOME=/opt/intel/debugger_2017/python/intel64/
HOME=/home/lmontigny
SHLVL=2
LOGNAME=lmontigny
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.75 58557 10.237.240.141 22
CLASSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib/mpi.jar:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/daal.jar
MODULESHOME=/usr/share/Modules
LESSOPEN=||/usr/bin/lesspipe.sh %s
INFOPATH=/opt/intel/documentation_2017/en/debugger//gdb-ia/info/:/opt/intel/documentation_2017/en/debugger//gdb-mic/info/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/info/
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
I_MPI_ROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
MPI_RANK_FOR_NODE=0 NODE=0, CORE=, MIC=0, SHARE=
MPI_RANK_FOR_NODE=1 NODE=1, CORE=, MIC=1, SHARE=
Number of Intel(R) Xeon Phi(TM) coprocessors : 0
================================================================================
HPLinpack 2.1  --  High-Performance Linpack benchmark  --   October 26, 2012
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   40000 
NB       :     192 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

skl2            : Column=000384 Fraction=0.005 Kernel=    0.03 Mflops=2524028.69
skl2            : Column=000576 Fraction=0.010 Kernel=1404234.34 Mflops=1998050.74
skl2            : Column=000768 Fraction=0.015 Kernel=1540735.65 Mflops=1861896.06
skl2            : Column=000960 Fraction=0.020 Kernel=1487425.27 Mflops=1774289.66
skl2            : Column=001152 Fraction=0.025 Kernel=1453777.44 Mflops=1712877.90
skl2            : Column=001344 Fraction=0.030 Kernel=1339650.98 Mflops=1649156.09
skl2            : Column=001536 Fraction=0.035 Kernel=1552038.19 Mflops=1636789.82
skl2            : Column=001728 Fraction=0.040 Kernel=1244164.70 Mflops=1583434.99
skl2            : Column=001920 Fraction=0.045 Kernel=1551197.46 Mflops=1580295.15
skl2            : Column=002112 Fraction=0.050 Kernel=1326322.64 Mflops=1554557.65
skl2            : Column=002304 Fraction=0.055 Kernel=1407200.17 Mflops=1541828.27
skl2            : Column=002496 Fraction=0.060 Kernel=1394508.63 Mflops=1530126.23
skl2            : Column=002688 Fraction=0.065 Kernel=1511176.79 Mflops=1528844.38
skl2            : Column=002880 Fraction=0.070 Kernel=1340216.57 Mflops=1515603.72
skl2            : Column=003072 Fraction=0.075 Kernel=1318995.39 Mflops=1502640.24
skl2            : Column=003264 Fraction=0.080 Kernel=1456979.31 Mflops=1500093.34
skl2            : Column=003456 Fraction=0.085 Kernel=1341880.92 Mflops=1491147.33
skl2            : Column=003648 Fraction=0.090 Kernel=1439057.75 Mflops=1488564.33
skl2            : Column=003840 Fraction=0.095 Kernel=1436964.35 Mflops=1486147.57
skl2            : Column=004032 Fraction=0.100 Kernel=1328001.78 Mflops=1478596.14
skl2            : Column=004224 Fraction=0.105 Kernel=1405670.75 Mflops=1475480.37
skl2            : Column=004416 Fraction=0.110 Kernel=1521534.60 Mflops=1477211.22
skl2            : Column=004608 Fraction=0.115 Kernel=1320736.96 Mflops=1470784.38
skl2            : Column=004992 Fraction=0.120 Kernel=1501952.78 Mflops=1472852.47
skl2            : Column=005184 Fraction=0.125 Kernel=1293066.89 Mflops=1466286.24
skl2            : Column=005376 Fraction=0.130 Kernel=1368804.14 Mflops=1463069.59
skl2            : Column=005568 Fraction=0.135 Kernel=1449539.37 Mflops=1462665.11
skl2            : Column=005760 Fraction=0.140 Kernel=1487040.75 Mflops=1463347.88
skl2            : Column=005952 Fraction=0.145 Kernel=1257428.53 Mflops=1456816.78
skl2            : Column=006144 Fraction=0.150 Kernel=1600138.54 Mflops=1460263.90
skl2            : Column=006336 Fraction=0.155 Kernel=1354776.00 Mflops=1457381.99
skl2            : Column=006528 Fraction=0.160 Kernel=1423366.41 Mflops=1456529.42
skl2            : Column=006720 Fraction=0.165 Kernel=1346511.23 Mflops=1453721.33
skl2            : Column=006912 Fraction=0.170 Kernel=1595497.74 Mflops=1456677.32
skl2            : Column=007104 Fraction=0.175 Kernel=1225588.14 Mflops=1450639.34
skl2            : Column=007296 Fraction=0.180 Kernel=1574782.77 Mflops=1453085.29
skl2            : Column=007488 Fraction=0.185 Kernel=1299081.32 Mflops=1449533.82
skl2            : Column=007680 Fraction=0.190 Kernel=1433525.84 Mflops=1449209.91
skl2            : Column=007872 Fraction=0.195 Kernel=1414157.06 Mflops=1448513.51
skl2            : Column=008064 Fraction=0.200 Kernel=1521861.42 Mflops=1449827.53
skl2            : Column=008256 Fraction=0.205 Kernel=1332936.82 Mflops=1447512.01
skl2            : Column=008448 Fraction=0.210 Kernel=1369347.07 Mflops=1446050.76
skl2            : Column=008640 Fraction=0.215 Kernel=1380052.80 Mflops=1444863.10
skl2            : Column=008832 Fraction=0.220 Kernel=1488316.37 Mflops=1445567.74
skl2            : Column=009024 Fraction=0.225 Kernel=1338508.82 Mflops=1443694.37
skl2            : Column=009216 Fraction=0.230 Kernel=1455907.42 Mflops=1443885.39
skl2            : Column=009408 Fraction=0.235 Kernel=1431949.01 Mflops=1443700.83
skl2            : Column=009792 Fraction=0.240 Kernel=1351867.33 Mflops=1440840.77
skl2            : Column=009984 Fraction=0.245 Kernel=1423604.04 Mflops=1440594.27
skl2            : Column=010176 Fraction=0.250 Kernel=1426433.15 Mflops=1440397.49
skl2            : Column=010368 Fraction=0.255 Kernel=1578659.42 Mflops=1442090.23
skl2            : Column=010560 Fraction=0.260 Kernel=1403566.11 Mflops=1441573.60
skl2            : Column=010752 Fraction=0.265 Kernel=1267803.94 Mflops=1439063.89
skl2            : Column=010944 Fraction=0.270 Kernel=1554989.01 Mflops=1440395.67
skl2            : Column=011136 Fraction=0.275 Kernel=1397734.95 Mflops=1439864.29
skl2            : Column=011328 Fraction=0.280 Kernel=1284097.48 Mflops=1437807.80
skl2            : Column=011520 Fraction=0.285 Kernel=1527610.60 Mflops=1438780.51
skl2            : Column=011712 Fraction=0.290 Kernel=1363386.29 Mflops=1437888.44
skl2            : Column=011904 Fraction=0.295 Kernel=1494334.26 Mflops=1438483.23
skl2            : Column=012096 Fraction=0.300 Kernel=1338853.90 Mflops=1437340.64
skl2            : Column=012288 Fraction=0.305 Kernel=1464069.01 Mflops=1437614.30
skl2            : Column=012480 Fraction=0.310 Kernel=1306413.87 Mflops=1436146.25
skl2            : Column=012672 Fraction=0.315 Kernel=1445284.95 Mflops=1436236.50
skl2            : Column=012864 Fraction=0.320 Kernel=1566013.17 Mflops=1437392.42
skl2            : Column=013056 Fraction=0.325 Kernel=1292256.63 Mflops=1435864.11
skl2            : Column=013248 Fraction=0.330 Kernel=1426186.92 Mflops=1435773.94
skl2            : Column=013440 Fraction=0.335 Kernel=1420756.26 Mflops=1435636.72
skl2            : Column=013632 Fraction=0.340 Kernel=1511013.62 Mflops=1436269.63
skl2            : Column=013824 Fraction=0.345 Kernel=1273128.01 Mflops=1434682.94
skl2            : Column=014016 Fraction=0.350 Kernel=1398640.81 Mflops=1434371.22
skl2            : Column=014208 Fraction=0.355 Kernel=1388713.40 Mflops=1433982.69
skl2            : Column=014592 Fraction=0.360 Kernel=1447466.17 Mflops=1434194.60
skl2            : Column=014784 Fraction=0.365 Kernel=1350620.85 Mflops=1433512.14
skl2            : Column=014976 Fraction=0.370 Kernel=1440361.42 Mflops=1433563.41
skl2            : Column=015168 Fraction=0.375 Kernel=1494583.81 Mflops=1433993.82
skl2            : Column=015360 Fraction=0.380 Kernel=1489864.24 Mflops=1434380.39
skl2            : Column=015552 Fraction=0.385 Kernel=1308440.96 Mflops=1433411.05
skl2            : Column=015744 Fraction=0.390 Kernel=1305463.14 Mflops=1432446.70
skl2            : Column=015936 Fraction=0.395 Kernel=1405785.09 Mflops=1432264.28
skl2            : Column=016128 Fraction=0.400 Kernel=1470235.45 Mflops=1432507.20
skl2            : Column=016320 Fraction=0.405 Kernel=1439314.22 Mflops=1432550.69
skl2            : Column=016512 Fraction=0.410 Kernel=1359549.77 Mflops=1432068.04
skl2            : Column=016704 Fraction=0.415 Kernel=1416344.68 Mflops=1431970.48
skl2            : Column=016896 Fraction=0.420 Kernel=1242951.00 Mflops=1430664.99
skl2            : Column=017088 Fraction=0.425 Kernel=1518453.95 Mflops=1431150.43
skl2            : Column=017280 Fraction=0.430 Kernel=1401733.67 Mflops=1430978.16
skl2            : Column=017472 Fraction=0.435 Kernel=1384593.32 Mflops=1430709.34
skl2            : Column=017664 Fraction=0.440 Kernel=1579058.71 Mflops=1431446.78
skl2            : Column=017856 Fraction=0.445 Kernel=1205236.97 Mflops=1430007.85
skl2            : Column=018048 Fraction=0.450 Kernel=1551514.24 Mflops=1430595.08
skl2            : Column=018240 Fraction=0.455 Kernel=1448956.97 Mflops=1430687.98
skl2            : Column=018432 Fraction=0.460 Kernel=1306962.89 Mflops=1430009.86
skl2            : Column=018624 Fraction=0.465 Kernel=1496458.77 Mflops=1430320.87
skl2            : Column=018816 Fraction=0.470 Kernel=1303697.46 Mflops=1429656.22
skl2            : Column=019008 Fraction=0.475 Kernel=1493127.89 Mflops=1429940.61
skl2            : Column=019392 Fraction=0.480 Kernel=1360965.22 Mflops=1429287.11
skl2            : Column=019584 Fraction=0.485 Kernel=1433034.39 Mflops=1429303.44
skl2            : Column=019776 Fraction=0.490 Kernel=1271008.05 Mflops=1428544.14
skl2            : Column=019968 Fraction=0.495 Kernel=1541218.83 Mflops=1428979.78
skl2            : Column=020736 Fraction=0.515 Kernel=1425546.96 Mflops=1428925.94
skl2            : Column=021504 Fraction=0.535 Kernel=1385015.07 Mflops=1428281.01
skl2            : Column=022272 Fraction=0.555 Kernel=1395745.10 Mflops=1427850.39
skl2            : Column=023040 Fraction=0.575 Kernel=1398162.80 Mflops=1427495.01
skl2            : Column=023808 Fraction=0.595 Kernel=1385252.31 Mflops=1427033.90
skl2            : Column=024768 Fraction=0.615 Kernel=1384500.57 Mflops=1426518.44
skl2            : Column=025536 Fraction=0.635 Kernel=1398846.76 Mflops=1426283.35
skl2            : Column=026304 Fraction=0.655 Kernel=1353378.41 Mflops=1425712.16
skl2            : Column=027072 Fraction=0.675 Kernel=1356732.24 Mflops=1425233.60
skl2            : Column=027840 Fraction=0.695 Kernel=1325055.13 Mflops=1424605.65
skl2            : Column=031872 Fraction=0.795 Kernel=1200174.52 Mflops=1419331.62
skl2            : Column=035904 Fraction=0.895 Kernel=860727.77 Mflops=1412616.89
skl2            : Column=039936 Fraction=0.995 Kernel=308524.15 Mflops=1407209.68
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       40000   192     1     1              30.39            1.40385e+03
HPL_pdgesv() start time Fri Feb  2 17:17:33 2018

HPL_pdgesv() end time   Fri Feb  2 17:18:03 2018

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=        0.0040309 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb  2 17:18:07 CET 2018
This run was done on: Fri Feb  2 17:18:55 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
50000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MKLROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl
MANPATH=/opt/intel/man/common:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/man:/opt/intel/documentation_2017/en/debugger//gdb-ia/man/:/opt/intel/documentation_2017/en/debugger//gdb-mic/man/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/man/:/usr/local/share/man:/usr/share/man/overrides:/usr/share/man:
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
IPPROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp
INTEL_LICENSE_FILE=/opt/intel/compilers_and_libraries_2017.6.256/linux/licenses:/opt/intel/licenses:/home/lmontigny/intel/licenses
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.75 58557 22
TMPDIR=/tmp
GDBSERVER_MIC=/opt/intel/debugger_2017/gdb/targets/mic/bin/gdbserver
LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
MIC_LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/debugger_2017/iga/lib:/opt/intel/debugger_2017/libipt/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
MIC_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
CPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/include
MPI_PER_NODE=2
NUMMIC=2
NLSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64/locale/%l_%t/%N:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64_mic/share/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64/share/locale/%l_%t/%N
PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/bin/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/bin:/opt/intel/debugger_2017/gdb/intel64_mic/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
LC_IDENTIFICATION=fr_FR.UTF-8
TBBROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
LANG=en_US.UTF-8
GDB_CROSS=/opt/intel/debugger_2017/gdb/intel64_mic/bin/gdb-mic
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=
DAALROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/daal
HISTCONTROL=ignoredups
MPM_LAUNCHER=/opt/intel/debugger_2017/mpm/mic/bin/start_mpm.sh
INTEL_PYTHONHOME=/opt/intel/debugger_2017/python/intel64/
HOME=/home/lmontigny
SHLVL=2
LOGNAME=lmontigny
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.75 58557 10.237.240.141 22
CLASSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib/mpi.jar:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/daal.jar
MODULESHOME=/usr/share/Modules
LESSOPEN=||/usr/bin/lesspipe.sh %s
INFOPATH=/opt/intel/documentation_2017/en/debugger//gdb-ia/info/:/opt/intel/documentation_2017/en/debugger//gdb-mic/info/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/info/
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
I_MPI_ROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
MPI_RANK_FOR_NODE=0 NODE=0, CORE=, MIC=0, SHARE=
MPI_RANK_FOR_NODE=1 NODE=1, CORE=, MIC=1, SHARE=
Number of Intel(R) Xeon Phi(TM) coprocessors : 0
================================================================================
HPLinpack 2.1  --  High-Performance Linpack benchmark  --   October 26, 2012
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   50000 
NB       :     192 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

skl2            : Column=000384 Fraction=0.005 Kernel=    0.05 Mflops=2449556.54
skl2            : Column=000576 Fraction=0.010 Kernel=1499323.89 Mflops=2025050.74
skl2            : Column=000768 Fraction=0.015 Kernel=1536529.61 Mflops=1877545.24
skl2            : Column=001152 Fraction=0.020 Kernel=1391157.98 Mflops=1684298.87
skl2            : Column=001344 Fraction=0.025 Kernel=1486397.30 Mflops=1653579.46
skl2            : Column=001536 Fraction=0.030 Kernel=1355206.40 Mflops=1610463.04
skl2            : Column=001920 Fraction=0.035 Kernel=1444974.61 Mflops=1575501.33
skl2            : Column=002112 Fraction=0.040 Kernel=1381333.51 Mflops=1556388.23
skl2            : Column=002304 Fraction=0.045 Kernel=1462687.43 Mflops=1548476.85
skl2            : Column=002688 Fraction=0.050 Kernel=1353299.27 Mflops=1518658.90
skl2            : Column=002880 Fraction=0.055 Kernel=1456169.44 Mflops=1514563.60
skl2            : Column=003072 Fraction=0.060 Kernel=1431419.33 Mflops=1509406.48
skl2            : Column=003264 Fraction=0.065 Kernel=1349009.32 Mflops=1499577.54
skl2            : Column=003648 Fraction=0.070 Kernel=1437711.69 Mflops=1493267.18
skl2            : Column=003840 Fraction=0.075 Kernel=1515776.06 Mflops=1494293.55
skl2            : Column=004032 Fraction=0.080 Kernel=1412088.78 Mflops=1490487.98
skl2            : Column=004416 Fraction=0.085 Kernel=1399039.09 Mflops=1482761.51
skl2            : Column=004608 Fraction=0.090 Kernel=1310476.88 Mflops=1475416.15
skl2            : Column=004800 Fraction=0.095 Kernel=1575820.09 Mflops=1478826.19
skl2            : Column=005184 Fraction=0.100 Kernel=1360635.11 Mflops=1470307.68
skl2            : Column=005376 Fraction=0.105 Kernel=1551696.36 Mflops=1472769.91
skl2            : Column=005568 Fraction=0.110 Kernel=1347636.84 Mflops=1468592.68
skl2            : Column=005760 Fraction=0.115 Kernel=1451330.53 Mflops=1468078.02
skl2            : Column=006144 Fraction=0.120 Kernel=1432926.64 Mflops=1466100.44
skl2            : Column=006336 Fraction=0.125 Kernel=1327177.52 Mflops=1462057.45
skl2            : Column=006528 Fraction=0.130 Kernel=1414697.12 Mflops=1460809.51
skl2            : Column=006912 Fraction=0.135 Kernel=1402490.76 Mflops=1457902.70
skl2            : Column=007104 Fraction=0.140 Kernel=1509210.84 Mflops=1459049.01
skl2            : Column=007296 Fraction=0.145 Kernel=1485958.43 Mflops=1459640.86
skl2            : Column=007680 Fraction=0.150 Kernel=1368458.39 Mflops=1455537.24
skl2            : Column=007872 Fraction=0.155 Kernel=1369676.60 Mflops=1453674.30
skl2            : Column=008064 Fraction=0.160 Kernel=1459585.86 Mflops=1453791.21
skl2            : Column=008256 Fraction=0.165 Kernel=1438295.26 Mflops=1453489.06
skl2            : Column=008640 Fraction=0.170 Kernel=1438814.35 Mflops=1452945.71
skl2            : Column=008832 Fraction=0.175 Kernel=1352021.95 Mflops=1451022.23
skl2            : Column=009024 Fraction=0.180 Kernel=1431573.76 Mflops=1450681.49
skl2            : Column=009408 Fraction=0.185 Kernel=1410073.48 Mflops=1449305.33
skl2            : Column=009600 Fraction=0.190 Kernel=1507075.04 Mflops=1450194.41
skl2            : Column=009792 Fraction=0.195 Kernel=1398254.99 Mflops=1449354.80
skl2            : Column=010176 Fraction=0.200 Kernel=1353634.12 Mflops=1446304.02
skl2            : Column=010368 Fraction=0.205 Kernel=1637316.02 Mflops=1448752.66
skl2            : Column=010560 Fraction=0.210 Kernel=1376405.50 Mflops=1447676.31
skl2            : Column=010752 Fraction=0.215 Kernel=1329018.41 Mflops=1445892.95
skl2            : Column=011136 Fraction=0.220 Kernel=1431296.16 Mflops=1445502.23
skl2            : Column=011328 Fraction=0.225 Kernel=1452673.10 Mflops=1445594.20
skl2            : Column=011520 Fraction=0.230 Kernel=1348273.37 Mflops=1444280.54
skl2            : Column=011904 Fraction=0.235 Kernel=1461361.04 Mflops=1444689.60
skl2            : Column=012096 Fraction=0.240 Kernel=1332471.12 Mflops=1443256.47
skl2            : Column=012288 Fraction=0.245 Kernel=1543767.63 Mflops=1444341.39
skl2            : Column=012672 Fraction=0.250 Kernel=1414437.20 Mflops=1443663.21
skl2            : Column=012864 Fraction=0.255 Kernel=1361863.36 Mflops=1442725.47
skl2            : Column=013056 Fraction=0.260 Kernel=1428374.40 Mflops=1442571.89
skl2            : Column=013440 Fraction=0.265 Kernel=1407150.87 Mflops=1441830.10
skl2            : Column=013632 Fraction=0.270 Kernel=1509781.38 Mflops=1442476.69
skl2            : Column=013824 Fraction=0.275 Kernel=1403551.60 Mflops=1442086.40
skl2            : Column=014016 Fraction=0.280 Kernel=1393011.37 Mflops=1441600.71
skl2            : Column=014400 Fraction=0.285 Kernel=1432104.90 Mflops=1441424.14
skl2            : Column=014592 Fraction=0.290 Kernel=1360139.76 Mflops=1440648.64
skl2            : Column=014784 Fraction=0.295 Kernel=1463164.49 Mflops=1440844.46
skl2            : Column=015168 Fraction=0.300 Kernel=1404113.82 Mflops=1440200.99
skl2            : Column=015360 Fraction=0.305 Kernel=1447925.65 Mflops=1440265.00
skl2            : Column=015552 Fraction=0.310 Kernel=1436639.92 Mflops=1440235.30
skl2            : Column=015936 Fraction=0.315 Kernel=1426419.27 Mflops=1440014.70
skl2            : Column=016128 Fraction=0.320 Kernel=1425005.96 Mflops=1439897.69
skl2            : Column=016320 Fraction=0.325 Kernel=1418885.49 Mflops=1439736.28
skl2            : Column=016512 Fraction=0.330 Kernel=1416264.11 Mflops=1439559.02
skl2            : Column=016896 Fraction=0.335 Kernel=1395081.62 Mflops=1438898.67
skl2            : Column=017088 Fraction=0.340 Kernel=1389555.54 Mflops=1438539.87
skl2            : Column=017280 Fraction=0.345 Kernel=1488652.63 Mflops=1438873.82
skl2            : Column=017664 Fraction=0.350 Kernel=1417063.57 Mflops=1438577.86
skl2            : Column=017856 Fraction=0.355 Kernel=1334706.89 Mflops=1437847.98
skl2            : Column=018048 Fraction=0.360 Kernel=1454682.23 Mflops=1437954.55
skl2            : Column=018432 Fraction=0.365 Kernel=1450745.24 Mflops=1438112.06
skl2            : Column=018624 Fraction=0.370 Kernel=1441716.70 Mflops=1438133.85
skl2            : Column=018816 Fraction=0.375 Kernel=1434731.38 Mflops=1438113.55
skl2            : Column=019008 Fraction=0.380 Kernel=1419116.88 Mflops=1438001.03
skl2            : Column=019392 Fraction=0.385 Kernel=1415629.40 Mflops=1437743.25
skl2            : Column=019584 Fraction=0.390 Kernel=1401322.06 Mflops=1437536.40
skl2            : Column=019776 Fraction=0.395 Kernel=1521595.81 Mflops=1437968.32
skl2            : Column=020160 Fraction=0.400 Kernel=1371077.27 Mflops=1437228.15
skl2            : Column=020352 Fraction=0.405 Kernel=1365736.05 Mflops=1436840.75
skl2            : Column=020544 Fraction=0.410 Kernel=1480693.63 Mflops=1437056.05
skl2            : Column=020928 Fraction=0.415 Kernel=1396709.49 Mflops=1436648.37
skl2            : Column=021120 Fraction=0.420 Kernel=1454587.44 Mflops=1436733.28
skl2            : Column=021312 Fraction=0.425 Kernel=1444670.45 Mflops=1436770.44
skl2            : Column=021504 Fraction=0.430 Kernel=1426593.90 Mflops=1436723.06
skl2            : Column=021888 Fraction=0.435 Kernel=1414949.59 Mflops=1436524.57
skl2            : Column=022080 Fraction=0.440 Kernel=1395778.17 Mflops=1436340.95
skl2            : Column=022272 Fraction=0.445 Kernel=1390355.08 Mflops=1436136.65
skl2            : Column=022656 Fraction=0.450 Kernel=1443321.35 Mflops=1436196.38
skl2            : Column=022848 Fraction=0.455 Kernel=1356213.45 Mflops=1435851.43
skl2            : Column=023040 Fraction=0.460 Kernel=1411901.93 Mflops=1435754.01
skl2            : Column=023424 Fraction=0.465 Kernel=1410511.15 Mflops=1435554.38
skl2            : Column=023616 Fraction=0.470 Kernel=1325148.44 Mflops=1435101.50
skl2            : Column=023808 Fraction=0.475 Kernel=1461809.29 Mflops=1435199.02
skl2            : Column=024192 Fraction=0.480 Kernel=1440358.98 Mflops=1435236.16
skl2            : Column=024384 Fraction=0.485 Kernel=1422028.53 Mflops=1435189.25
skl2            : Column=024576 Fraction=0.490 Kernel=1427571.21 Mflops=1435162.78
skl2            : Column=024768 Fraction=0.495 Kernel=1396603.24 Mflops=1435028.39
skl2            : Column=025920 Fraction=0.515 Kernel=1387787.10 Mflops=1434104.52
skl2            : Column=026880 Fraction=0.535 Kernel=1409842.20 Mflops=1433753.11
skl2            : Column=027840 Fraction=0.555 Kernel=1417829.20 Mflops=1433544.81
skl2            : Column=028800 Fraction=0.575 Kernel=1409524.44 Mflops=1433258.44
skl2            : Column=029760 Fraction=0.595 Kernel=1406541.98 Mflops=1432970.03
skl2            : Column=030912 Fraction=0.615 Kernel=1384049.07 Mflops=1432396.70
skl2            : Column=031872 Fraction=0.635 Kernel=1412982.42 Mflops=1432231.82
skl2            : Column=032832 Fraction=0.655 Kernel=1383492.62 Mflops=1431854.48
skl2            : Column=033792 Fraction=0.675 Kernel=1369257.62 Mflops=1431419.68
skl2            : Column=034752 Fraction=0.695 Kernel=1374064.00 Mflops=1431069.17
skl2            : Column=039936 Fraction=0.795 Kernel=1308523.76 Mflops=1428343.94
skl2            : Column=044928 Fraction=0.895 Kernel=1010787.82 Mflops=1424156.18
skl2            : Column=049920 Fraction=0.995 Kernel=398382.06 Mflops=1420338.76
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       50000   192     1     1              58.79            1.41766e+03
HPL_pdgesv() start time Fri Feb  2 17:19:03 2018

HPL_pdgesv() end time   Fri Feb  2 17:20:02 2018

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=        0.0040735 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb  2 17:20:09 CET 2018
This run was done on: Fri Feb  2 17:23:22 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
50000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MKLROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl
MANPATH=/opt/intel/man/common:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/man:/opt/intel/documentation_2017/en/debugger//gdb-ia/man/:/opt/intel/documentation_2017/en/debugger//gdb-mic/man/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/man/:/usr/local/share/man:/usr/share/man/overrides:/usr/share/man:
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
IPPROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp
INTEL_LICENSE_FILE=/opt/intel/compilers_and_libraries_2017.6.256/linux/licenses:/opt/intel/licenses:/home/lmontigny/intel/licenses
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.75 58557 22
TMPDIR=/tmp
GDBSERVER_MIC=/opt/intel/debugger_2017/gdb/targets/mic/bin/gdbserver
LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
MIC_LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/debugger_2017/iga/lib:/opt/intel/debugger_2017/libipt/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
MIC_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
CPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/include
MPI_PER_NODE=2
NUMMIC=2
NLSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64/locale/%l_%t/%N:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64_mic/share/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64/share/locale/%l_%t/%N
PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/bin/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/bin:/opt/intel/debugger_2017/gdb/intel64_mic/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
LC_IDENTIFICATION=fr_FR.UTF-8
TBBROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
LANG=en_US.UTF-8
GDB_CROSS=/opt/intel/debugger_2017/gdb/intel64_mic/bin/gdb-mic
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=
DAALROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/daal
HISTCONTROL=ignoredups
MPM_LAUNCHER=/opt/intel/debugger_2017/mpm/mic/bin/start_mpm.sh
INTEL_PYTHONHOME=/opt/intel/debugger_2017/python/intel64/
HOME=/home/lmontigny
SHLVL=2
LOGNAME=lmontigny
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.75 58557 10.237.240.141 22
CLASSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib/mpi.jar:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/daal.jar
MODULESHOME=/usr/share/Modules
LESSOPEN=||/usr/bin/lesspipe.sh %s
OMP_NUM_THREADS=24
INFOPATH=/opt/intel/documentation_2017/en/debugger//gdb-ia/info/:/opt/intel/documentation_2017/en/debugger//gdb-mic/info/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/info/
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
I_MPI_ROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
MPI_RANK_FOR_NODE=0 NODE=0, CORE=, MIC=0, SHARE=
MPI_RANK_FOR_NODE=1 NODE=1, CORE=, MIC=1, SHARE=
Number of Intel(R) Xeon Phi(TM) coprocessors : 0
================================================================================
HPLinpack 2.1  --  High-Performance Linpack benchmark  --   October 26, 2012
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   50000 
NB       :     192 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

skl2            : Column=000384 Fraction=0.005 Kernel=    0.05 Mflops=2460257.66
skl2            : Column=000576 Fraction=0.010 Kernel=1492308.90 Mflops=2025671.50
skl2            : Column=000768 Fraction=0.015 Kernel=1539099.03 Mflops=1878894.26
skl2            : Column=001152 Fraction=0.020 Kernel=1395571.78 Mflops=1687148.98
skl2            : Column=001344 Fraction=0.025 Kernel=1484400.14 Mflops=1655596.36
skl2            : Column=001536 Fraction=0.030 Kernel=1400530.32 Mflops=1619725.70
skl2            : Column=001920 Fraction=0.035 Kernel=1398361.49 Mflops=1571522.59
skl2            : Column=002112 Fraction=0.040 Kernel=1382586.51 Mflops=1552982.00
skl2            : Column=002304 Fraction=0.045 Kernel=1465691.57 Mflops=1545640.45
skl2            : Column=002688 Fraction=0.050 Kernel=1356240.04 Mflops=1516803.12
skl2            : Column=002880 Fraction=0.055 Kernel=1460205.75 Mflops=1513107.77
skl2            : Column=003072 Fraction=0.060 Kernel=1357844.27 Mflops=1502998.64
skl2            : Column=003264 Fraction=0.065 Kernel=1442312.80 Mflops=1499520.59
skl2            : Column=003648 Fraction=0.070 Kernel=1462928.97 Mflops=1495846.22
skl2            : Column=003840 Fraction=0.075 Kernel=1435791.33 Mflops=1492957.86
skl2            : Column=004032 Fraction=0.080 Kernel=1424566.19 Mflops=1489820.88
skl2            : Column=004416 Fraction=0.085 Kernel=1363983.18 Mflops=1478943.75
skl2            : Column=004608 Fraction=0.090 Kernel=1447619.69 Mflops=1477732.87
skl2            : Column=004800 Fraction=0.095 Kernel=1499120.85 Mflops=1478496.27
skl2            : Column=005184 Fraction=0.100 Kernel=1412941.10 Mflops=1473935.12
skl2            : Column=005376 Fraction=0.105 Kernel=1388914.58 Mflops=1471064.89
skl2            : Column=005568 Fraction=0.110 Kernel=1365006.04 Mflops=1467571.89
skl2            : Column=005760 Fraction=0.115 Kernel=1447423.03 Mflops=1466970.00
skl2            : Column=006144 Fraction=0.120 Kernel=1444140.61 Mflops=1465695.97
skl2            : Column=006336 Fraction=0.125 Kernel=1390572.15 Mflops=1463607.14
skl2            : Column=006528 Fraction=0.130 Kernel=1346513.58 Mflops=1460366.49
skl2            : Column=006912 Fraction=0.135 Kernel=1453131.94 Mflops=1460017.95
skl2            : Column=007104 Fraction=0.140 Kernel=1432756.52 Mflops=1459376.24
skl2            : Column=007296 Fraction=0.145 Kernel=1420928.22 Mflops=1458492.60
skl2            : Column=007680 Fraction=0.150 Kernel=1444196.81 Mflops=1457881.98
skl2            : Column=007872 Fraction=0.155 Kernel=1406128.82 Mflops=1456785.85
skl2            : Column=008064 Fraction=0.160 Kernel=1318263.28 Mflops=1453752.68
skl2            : Column=008256 Fraction=0.165 Kernel=1391299.74 Mflops=1452494.63
skl2            : Column=008640 Fraction=0.170 Kernel=1425000.38 Mflops=1451467.81
skl2            : Column=008832 Fraction=0.175 Kernel=1477107.96 Mflops=1451915.37
skl2            : Column=009024 Fraction=0.180 Kernel=1579306.07 Mflops=1453943.05
skl2            : Column=009408 Fraction=0.185 Kernel=1395402.31 Mflops=1451934.67
skl2            : Column=009600 Fraction=0.190 Kernel=1327136.36 Mflops=1449754.27
skl2            : Column=009792 Fraction=0.195 Kernel=1412074.46 Mflops=1449151.22
skl2            : Column=010176 Fraction=0.200 Kernel=1487887.72 Mflops=1450277.50
skl2            : Column=010368 Fraction=0.205 Kernel=1309670.61 Mflops=1448025.22
skl2            : Column=010560 Fraction=0.210 Kernel=1514604.09 Mflops=1448926.15
skl2            : Column=010752 Fraction=0.215 Kernel=1393574.45 Mflops=1448131.55
skl2            : Column=011136 Fraction=0.220 Kernel=1440155.72 Mflops=1447919.02
skl2            : Column=011328 Fraction=0.225 Kernel=1316032.58 Mflops=1446051.16
skl2            : Column=011520 Fraction=0.230 Kernel=1482078.72 Mflops=1446494.24
skl2            : Column=011904 Fraction=0.235 Kernel=1412453.40 Mflops=1445650.19
skl2            : Column=012096 Fraction=0.240 Kernel=1435777.45 Mflops=1445533.00
skl2            : Column=012288 Fraction=0.245 Kernel=1565177.61 Mflops=1446808.96
skl2            : Column=012672 Fraction=0.250 Kernel=1374257.83 Mflops=1445113.81
skl2            : Column=012864 Fraction=0.255 Kernel=1425821.75 Mflops=1444902.25
skl2            : Column=013056 Fraction=0.260 Kernel=1421215.07 Mflops=1444647.11
skl2            : Column=013440 Fraction=0.265 Kernel=1431808.90 Mflops=1444382.41
skl2            : Column=013632 Fraction=0.270 Kernel=1369569.19 Mflops=1443597.04
skl2            : Column=013824 Fraction=0.275 Kernel=1477185.03 Mflops=1443917.43
skl2            : Column=014016 Fraction=0.280 Kernel=1481419.07 Mflops=1444267.08
skl2            : Column=014400 Fraction=0.285 Kernel=1437537.22 Mflops=1444142.17
skl2            : Column=014592 Fraction=0.290 Kernel=1365718.21 Mflops=1443395.60
skl2            : Column=014784 Fraction=0.295 Kernel=1358550.30 Mflops=1442599.93
skl2            : Column=015168 Fraction=0.300 Kernel=1430682.79 Mflops=1442394.72
skl2            : Column=015360 Fraction=0.305 Kernel=1576949.47 Mflops=1443420.64
skl2            : Column=015552 Fraction=0.310 Kernel=1330865.64 Mflops=1442423.89
skl2            : Column=015936 Fraction=0.315 Kernel=1427519.26 Mflops=1442185.74
skl2            : Column=016128 Fraction=0.320 Kernel=1404422.84 Mflops=1441886.60
skl2            : Column=016320 Fraction=0.325 Kernel=1519153.93 Mflops=1442442.04
skl2            : Column=016512 Fraction=0.330 Kernel=1304937.89 Mflops=1441313.71
skl2            : Column=016896 Fraction=0.335 Kernel=1446793.89 Mflops=1441392.30
skl2            : Column=017088 Fraction=0.340 Kernel=1484474.98 Mflops=1441686.18
skl2            : Column=017280 Fraction=0.345 Kernel=1380333.03 Mflops=1441244.52
skl2            : Column=017664 Fraction=0.350 Kernel=1411178.78 Mflops=1440834.19
skl2            : Column=017856 Fraction=0.355 Kernel=1455458.00 Mflops=1440928.62
skl2            : Column=018048 Fraction=0.360 Kernel=1341416.34 Mflops=1440244.40
skl2            : Column=018432 Fraction=0.365 Kernel=1443578.69 Mflops=1440285.72
skl2            : Column=018624 Fraction=0.370 Kernel=1410530.22 Mflops=1440101.56
skl2            : Column=018816 Fraction=0.375 Kernel=1540554.60 Mflops=1440660.76
skl2            : Column=019008 Fraction=0.380 Kernel=1388758.42 Mflops=1440346.09
skl2            : Column=019392 Fraction=0.385 Kernel=1391679.28 Mflops=1439774.86
skl2            : Column=019584 Fraction=0.390 Kernel=1398673.81 Mflops=1439540.67
skl2            : Column=019776 Fraction=0.395 Kernel=1380306.48 Mflops=1439204.87
skl2            : Column=020160 Fraction=0.400 Kernel=1432036.79 Mflops=1439128.83
skl2            : Column=020352 Fraction=0.405 Kernel=1487171.49 Mflops=1439368.32
skl2            : Column=020544 Fraction=0.410 Kernel=1343548.45 Mflops=1438849.23
skl2            : Column=020928 Fraction=0.415 Kernel=1395959.59 Mflops=1438415.08
skl2            : Column=021120 Fraction=0.420 Kernel=1595903.95 Mflops=1439095.68
skl2            : Column=021312 Fraction=0.425 Kernel=1312228.67 Mflops=1438441.10
skl2            : Column=021504 Fraction=0.430 Kernel=1576254.55 Mflops=1439022.72
skl2            : Column=021888 Fraction=0.435 Kernel=1412782.18 Mflops=1438782.77
skl2            : Column=022080 Fraction=0.440 Kernel=1280744.25 Mflops=1438005.68
skl2            : Column=022272 Fraction=0.445 Kernel=1531896.60 Mflops=1438384.85
skl2            : Column=022656 Fraction=0.450 Kernel=1376649.49 Mflops=1437846.16
skl2            : Column=022848 Fraction=0.455 Kernel=1491570.56 Mflops=1438057.16
skl2            : Column=023040 Fraction=0.460 Kernel=1365668.56 Mflops=1437752.30
skl2            : Column=023424 Fraction=0.465 Kernel=1417641.03 Mflops=1437593.82
skl2            : Column=023616 Fraction=0.470 Kernel=1459496.55 Mflops=1437675.54
skl2            : Column=023808 Fraction=0.475 Kernel=1312850.43 Mflops=1437167.36
skl2            : Column=024192 Fraction=0.480 Kernel=1426382.32 Mflops=1437088.87
skl2            : Column=024384 Fraction=0.485 Kernel=1422100.70 Mflops=1437035.56
skl2            : Column=024576 Fraction=0.490 Kernel=1412524.74 Mflops=1436949.40
skl2            : Column=024768 Fraction=0.495 Kernel=1538031.92 Mflops=1437269.81
skl2            : Column=025920 Fraction=0.515 Kernel=1388731.74 Mflops=1436319.77
skl2            : Column=026880 Fraction=0.535 Kernel=1402605.70 Mflops=1435828.23
skl2            : Column=027840 Fraction=0.555 Kernel=1410065.93 Mflops=1435488.92
skl2            : Column=028800 Fraction=0.575 Kernel=1410381.43 Mflops=1435189.36
skl2            : Column=029760 Fraction=0.595 Kernel=1402803.41 Mflops=1434838.36
skl2            : Column=030912 Fraction=0.615 Kernel=1397661.91 Mflops=1434406.31
skl2            : Column=031872 Fraction=0.635 Kernel=1414731.95 Mflops=1434239.19
skl2            : Column=032832 Fraction=0.655 Kernel=1387195.17 Mflops=1433875.44
skl2            : Column=033792 Fraction=0.675 Kernel=1383262.99 Mflops=1433526.92
skl2            : Column=034752 Fraction=0.695 Kernel=1370695.45 Mflops=1433141.46
skl2            : Column=039936 Fraction=0.795 Kernel=1308374.20 Mflops=1430362.58
skl2            : Column=044928 Fraction=0.895 Kernel=1006678.59 Mflops=1426090.22
skl2            : Column=049920 Fraction=0.995 Kernel=401110.26 Mflops=1422296.47
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       50000   192     1     1              58.70            1.41963e+03
HPL_pdgesv() start time Fri Feb  2 17:23:29 2018

HPL_pdgesv() end time   Fri Feb  2 17:24:28 2018

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=        0.0040735 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb  2 17:24:35 CET 2018
This run was done on: Fri Feb  2 17:24:59 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
50000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MKLROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl
MANPATH=/opt/intel/man/common:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/man:/opt/intel/documentation_2017/en/debugger//gdb-ia/man/:/opt/intel/documentation_2017/en/debugger//gdb-mic/man/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/man/:/usr/local/share/man:/usr/share/man/overrides:/usr/share/man:
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
IPPROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp
INTEL_LICENSE_FILE=/opt/intel/compilers_and_libraries_2017.6.256/linux/licenses:/opt/intel/licenses:/home/lmontigny/intel/licenses
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.75 58557 22
TMPDIR=/tmp
GDBSERVER_MIC=/opt/intel/debugger_2017/gdb/targets/mic/bin/gdbserver
LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
MIC_LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/debugger_2017/iga/lib:/opt/intel/debugger_2017/libipt/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
MIC_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
CPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/include
MPI_PER_NODE=2
NUMMIC=2
NLSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64/locale/%l_%t/%N:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64_mic/share/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64/share/locale/%l_%t/%N
PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/bin/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/bin:/opt/intel/debugger_2017/gdb/intel64_mic/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
LC_IDENTIFICATION=fr_FR.UTF-8
TBBROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
LANG=en_US.UTF-8
GDB_CROSS=/opt/intel/debugger_2017/gdb/intel64_mic/bin/gdb-mic
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=
DAALROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/daal
HISTCONTROL=ignoredups
MPM_LAUNCHER=/opt/intel/debugger_2017/mpm/mic/bin/start_mpm.sh
INTEL_PYTHONHOME=/opt/intel/debugger_2017/python/intel64/
HOME=/home/lmontigny
SHLVL=2
LOGNAME=lmontigny
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.75 58557 10.237.240.141 22
CLASSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib/mpi.jar:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/daal.jar
MODULESHOME=/usr/share/Modules
LESSOPEN=||/usr/bin/lesspipe.sh %s
INFOPATH=/opt/intel/documentation_2017/en/debugger//gdb-ia/info/:/opt/intel/documentation_2017/en/debugger//gdb-mic/info/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/info/
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
I_MPI_ROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
MPI_RANK_FOR_NODE=0 NODE=0, CORE=, MIC=0, SHARE=
MPI_RANK_FOR_NODE=1 NODE=1, CORE=, MIC=1, SHARE=
Number of Intel(R) Xeon Phi(TM) coprocessors : 0
================================================================================
HPLinpack 2.1  --  High-Performance Linpack benchmark  --   October 26, 2012
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   50000 
NB       :     192 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

Done: Fri Feb  2 17:25:03 CET 2018
This run was done on: Fri Feb  2 17:25:16 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MKLROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl
MANPATH=/opt/intel/man/common:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/man:/opt/intel/documentation_2017/en/debugger//gdb-ia/man/:/opt/intel/documentation_2017/en/debugger//gdb-mic/man/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/man/:/usr/local/share/man:/usr/share/man/overrides:/usr/share/man:
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
IPPROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp
INTEL_LICENSE_FILE=/opt/intel/compilers_and_libraries_2017.6.256/linux/licenses:/opt/intel/licenses:/home/lmontigny/intel/licenses
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.75 58557 22
TMPDIR=/tmp
GDBSERVER_MIC=/opt/intel/debugger_2017/gdb/targets/mic/bin/gdbserver
LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
MIC_LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/debugger_2017/iga/lib:/opt/intel/debugger_2017/libipt/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
MIC_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
CPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/include
MPI_PER_NODE=2
NUMMIC=2
NLSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64/locale/%l_%t/%N:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64_mic/share/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64/share/locale/%l_%t/%N
PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/bin/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/bin:/opt/intel/debugger_2017/gdb/intel64_mic/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
LC_IDENTIFICATION=fr_FR.UTF-8
TBBROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
LANG=en_US.UTF-8
GDB_CROSS=/opt/intel/debugger_2017/gdb/intel64_mic/bin/gdb-mic
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=
DAALROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/daal
HISTCONTROL=ignoredups
MPM_LAUNCHER=/opt/intel/debugger_2017/mpm/mic/bin/start_mpm.sh
INTEL_PYTHONHOME=/opt/intel/debugger_2017/python/intel64/
HOME=/home/lmontigny
SHLVL=2
LOGNAME=lmontigny
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.75 58557 10.237.240.141 22
CLASSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib/mpi.jar:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/daal.jar
MODULESHOME=/usr/share/Modules
LESSOPEN=||/usr/bin/lesspipe.sh %s
INFOPATH=/opt/intel/documentation_2017/en/debugger//gdb-ia/info/:/opt/intel/documentation_2017/en/debugger//gdb-mic/info/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/info/
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
I_MPI_ROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
MPI_RANK_FOR_NODE=0 NODE=0, CORE=, MIC=0, SHARE=
MPI_RANK_FOR_NODE=1 NODE=1, CORE=, MIC=1, SHARE=
Number of Intel(R) Xeon Phi(TM) coprocessors : 0
================================================================================
HPLinpack 2.1  --  High-Performance Linpack benchmark  --   October 26, 2012
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   60000 
NB       :     192 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

skl2            : Column=000384 Fraction=0.005 Kernel=    0.09 Mflops=2608568.07
skl2            : Column=000768 Fraction=0.010 Kernel=1449973.05 Mflops=1867331.60
skl2            : Column=000960 Fraction=0.015 Kernel=1473455.03 Mflops=1773724.57
skl2            : Column=001344 Fraction=0.020 Kernel=1463479.53 Mflops=1673971.74
skl2            : Column=001536 Fraction=0.025 Kernel=1352831.60 Mflops=1626791.71
skl2            : Column=001920 Fraction=0.030 Kernel=1427722.17 Mflops=1583771.35
skl2            : Column=002112 Fraction=0.035 Kernel=1449689.71 Mflops=1570990.31
skl2            : Column=002496 Fraction=0.040 Kernel=1437538.35 Mflops=1549649.64
skl2            : Column=002880 Fraction=0.045 Kernel=1394242.48 Mflops=1527904.08
skl2            : Column=003072 Fraction=0.050 Kernel=1429151.22 Mflops=1521653.70
skl2            : Column=003456 Fraction=0.055 Kernel=1488611.28 Mflops=1518105.39
skl2            : Column=003648 Fraction=0.060 Kernel=1407787.30 Mflops=1512235.32
skl2            : Column=004032 Fraction=0.065 Kernel=1418783.53 Mflops=1503391.93
skl2            : Column=004224 Fraction=0.070 Kernel=1490461.99 Mflops=1502840.12
skl2            : Column=004608 Fraction=0.075 Kernel=1466016.42 Mflops=1499927.69
skl2            : Column=004992 Fraction=0.080 Kernel=1395068.22 Mflops=1491983.60
skl2            : Column=005184 Fraction=0.085 Kernel=1457861.04 Mflops=1490801.98
skl2            : Column=005568 Fraction=0.090 Kernel=1405220.50 Mflops=1485121.04
skl2            : Column=005760 Fraction=0.095 Kernel=1517890.62 Mflops=1486087.95
skl2            : Column=006144 Fraction=0.100 Kernel=1427011.49 Mflops=1482633.42
skl2            : Column=006336 Fraction=0.105 Kernel=1418579.19 Mflops=1480822.22
skl2            : Column=006720 Fraction=0.110 Kernel=1414155.08 Mflops=1477279.48
skl2            : Column=006912 Fraction=0.115 Kernel=1485131.53 Mflops=1477471.21
skl2            : Column=007296 Fraction=0.120 Kernel=1436441.39 Mflops=1475519.45
skl2            : Column=007680 Fraction=0.125 Kernel=1465607.01 Mflops=1475084.00
skl2            : Column=007872 Fraction=0.130 Kernel=1384122.83 Mflops=1473038.64
skl2            : Column=008256 Fraction=0.135 Kernel=1447278.99 Mflops=1471987.61
skl2            : Column=008448 Fraction=0.140 Kernel=1369018.91 Mflops=1469837.33
skl2            : Column=008832 Fraction=0.145 Kernel=1459949.16 Mflops=1469468.65
skl2            : Column=009024 Fraction=0.150 Kernel=1525909.99 Mflops=1470446.85
skl2            : Column=009408 Fraction=0.155 Kernel=1392368.16 Mflops=1467620.36
skl2            : Column=009792 Fraction=0.160 Kernel=1448863.41 Mflops=1466998.95
skl2            : Column=009984 Fraction=0.165 Kernel=1413296.96 Mflops=1466112.28
skl2            : Column=010368 Fraction=0.170 Kernel=1432997.90 Mflops=1465079.42
skl2            : Column=010560 Fraction=0.175 Kernel=1558436.42 Mflops=1466384.23
skl2            : Column=010944 Fraction=0.180 Kernel=1443262.22 Mflops=1465714.39
skl2            : Column=011136 Fraction=0.185 Kernel=1462984.49 Mflops=1465676.37
skl2            : Column=011520 Fraction=0.190 Kernel=1408211.03 Mflops=1464078.76
skl2            : Column=011712 Fraction=0.195 Kernel=1525341.73 Mflops=1464845.95
skl2            : Column=012096 Fraction=0.200 Kernel=1396461.96 Mflops=1463045.99
skl2            : Column=012480 Fraction=0.205 Kernel=1463127.62 Mflops=1463047.96
skl2            : Column=012672 Fraction=0.210 Kernel=1403809.87 Mflops=1462321.17
skl2            : Column=013056 Fraction=0.215 Kernel=1444197.24 Mflops=1461903.95
skl2            : Column=013248 Fraction=0.220 Kernel=1487204.22 Mflops=1462180.24
skl2            : Column=013632 Fraction=0.225 Kernel=1428202.78 Mflops=1461433.71
skl2            : Column=013824 Fraction=0.230 Kernel=1383843.18 Mflops=1460574.48
skl2            : Column=014208 Fraction=0.235 Kernel=1455856.38 Mflops=1460478.39
skl2            : Column=014592 Fraction=0.240 Kernel=1442949.22 Mflops=1460131.17
skl2            : Column=014784 Fraction=0.245 Kernel=1429376.62 Mflops=1459830.53
skl2            : Column=015168 Fraction=0.250 Kernel=1464578.38 Mflops=1459918.32
skl2            : Column=015360 Fraction=0.255 Kernel=1337577.54 Mflops=1458707.72
skl2            : Column=015744 Fraction=0.260 Kernel=1449010.65 Mflops=1458535.94
skl2            : Column=015936 Fraction=0.265 Kernel=1586269.87 Mflops=1459547.99
skl2            : Column=016320 Fraction=0.270 Kernel=1392297.75 Mflops=1458370.62
skl2            : Column=016512 Fraction=0.275 Kernel=1565732.86 Mflops=1459189.10
skl2            : Column=016896 Fraction=0.280 Kernel=1415862.42 Mflops=1458479.98
skl2            : Column=017280 Fraction=0.285 Kernel=1423624.15 Mflops=1457931.41
skl2            : Column=017472 Fraction=0.290 Kernel=1362334.60 Mflops=1457162.05
skl2            : Column=017856 Fraction=0.295 Kernel=1479742.30 Mflops=1457487.40
skl2            : Column=018048 Fraction=0.300 Kernel=1504188.84 Mflops=1457811.63
skl2            : Column=018432 Fraction=0.305 Kernel=1408682.09 Mflops=1457103.51
skl2            : Column=018624 Fraction=0.310 Kernel=1496601.72 Mflops=1457366.00
skl2            : Column=019008 Fraction=0.315 Kernel=1387727.56 Mflops=1456395.34
skl2            : Column=019392 Fraction=0.320 Kernel=1415412.73 Mflops=1455852.94
skl2            : Column=019584 Fraction=0.325 Kernel=1614026.43 Mflops=1456752.77
skl2            : Column=019968 Fraction=0.330 Kernel=1401519.04 Mflops=1456048.39
skl2            : Column=020160 Fraction=0.335 Kernel=1443067.67 Mflops=1455969.64
skl2            : Column=020544 Fraction=0.340 Kernel=1430271.34 Mflops=1455663.23
skl2            : Column=020736 Fraction=0.345 Kernel=1461116.15 Mflops=1455694.41
skl2            : Column=021120 Fraction=0.350 Kernel=1420283.87 Mflops=1455288.56
skl2            : Column=021312 Fraction=0.355 Kernel=1517113.70 Mflops=1455613.65
skl2            : Column=021696 Fraction=0.360 Kernel=1421520.93 Mflops=1455240.78
skl2            : Column=022080 Fraction=0.365 Kernel=1422169.38 Mflops=1454890.19
skl2            : Column=022272 Fraction=0.370 Kernel=1466018.19 Mflops=1454946.26
skl2            : Column=022656 Fraction=0.375 Kernel=1455603.57 Mflops=1454952.77
skl2            : Column=022848 Fraction=0.380 Kernel=1357741.18 Mflops=1454447.55
skl2            : Column=023232 Fraction=0.385 Kernel=1444007.57 Mflops=1454348.04
skl2            : Column=023424 Fraction=0.390 Kernel=1418851.38 Mflops=1454179.36
skl2            : Column=023808 Fraction=0.395 Kernel=1450338.80 Mflops=1454144.53
skl2            : Column=024192 Fraction=0.400 Kernel=1443187.12 Mflops=1454047.62
skl2            : Column=024384 Fraction=0.405 Kernel=1377926.94 Mflops=1453702.27
skl2            : Column=024768 Fraction=0.410 Kernel=1491280.39 Mflops=1454009.73
skl2            : Column=024960 Fraction=0.415 Kernel=1462447.42 Mflops=1454044.22
skl2            : Column=025344 Fraction=0.420 Kernel=1346141.94 Mflops=1453109.76
skl2            : Column=025536 Fraction=0.425 Kernel=1624258.88 Mflops=1453711.72
skl2            : Column=025920 Fraction=0.430 Kernel=1383285.51 Mflops=1453144.28
skl2            : Column=026112 Fraction=0.435 Kernel=1532581.16 Mflops=1453427.28
skl2            : Column=026496 Fraction=0.440 Kernel=1447926.20 Mflops=1453386.79
skl2            : Column=026880 Fraction=0.445 Kernel=1383322.41 Mflops=1452863.21
skl2            : Column=027072 Fraction=0.450 Kernel=1378236.64 Mflops=1452589.17
skl2            : Column=027456 Fraction=0.455 Kernel=1480792.66 Mflops=1452777.35
skl2            : Column=027648 Fraction=0.460 Kernel=1263454.96 Mflops=1452052.88
skl2            : Column=028032 Fraction=0.465 Kernel=1516767.63 Mflops=1452455.63
skl2            : Column=028224 Fraction=0.470 Kernel=1433562.35 Mflops=1452394.74
skl2            : Column=028608 Fraction=0.475 Kernel=1342593.51 Mflops=1451657.52
skl2            : Column=028992 Fraction=0.480 Kernel=1473065.12 Mflops=1451784.60
skl2            : Column=029184 Fraction=0.485 Kernel=1370631.59 Mflops=1451531.28
skl2            : Column=029568 Fraction=0.490 Kernel=1441144.64 Mflops=1451471.11
skl2            : Column=029760 Fraction=0.495 Kernel=1489370.58 Mflops=1451575.06
skl2            : Column=030912 Fraction=0.515 Kernel=1425901.57 Mflops=1451159.84
skl2            : Column=032256 Fraction=0.535 Kernel=1433312.01 Mflops=1450857.60
skl2            : Column=033408 Fraction=0.555 Kernel=1415343.14 Mflops=1450386.74
skl2            : Column=034560 Fraction=0.575 Kernel=1417962.37 Mflops=1449997.99
skl2            : Column=035712 Fraction=0.595 Kernel=1404461.88 Mflops=1449500.01
skl2            : Column=037056 Fraction=0.615 Kernel=1425606.25 Mflops=1449232.08
skl2            : Column=038208 Fraction=0.635 Kernel=1393765.57 Mflops=1448747.21
skl2            : Column=039360 Fraction=0.655 Kernel=1422051.30 Mflops=1448543.01
skl2            : Column=040512 Fraction=0.675 Kernel=1406595.85 Mflops=1448254.87
skl2            : Column=041856 Fraction=0.695 Kernel=1400377.46 Mflops=1447918.27
skl2            : Column=047808 Fraction=0.795 Kernel=1370044.30 Mflops=1446321.27
skl2            : Column=053760 Fraction=0.895 Kernel=1136751.85 Mflops=1443462.09
skl2            : Column=059712 Fraction=0.995 Kernel=523310.18 Mflops=1440613.01
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       60000   192     1     1             100.12            1.43838e+03
HPL_pdgesv() start time Fri Feb  2 17:25:27 2018

HPL_pdgesv() end time   Fri Feb  2 17:27:07 2018

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=        0.0043047 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb  2 17:27:17 CET 2018
This run was done on: Fri Feb  2 17:27:57 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MKLROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl
MANPATH=/opt/intel/man/common:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/man:/opt/intel/documentation_2017/en/debugger//gdb-ia/man/:/opt/intel/documentation_2017/en/debugger//gdb-mic/man/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/man/:/usr/local/share/man:/usr/share/man/overrides:/usr/share/man:
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
IPPROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp
INTEL_LICENSE_FILE=/opt/intel/compilers_and_libraries_2017.6.256/linux/licenses:/opt/intel/licenses:/home/lmontigny/intel/licenses
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.75 58557 22
TMPDIR=/tmp
GDBSERVER_MIC=/opt/intel/debugger_2017/gdb/targets/mic/bin/gdbserver
LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
MIC_LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/lib/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/intel64/gcc4.7:/opt/intel/debugger_2017/iga/lib:/opt/intel/debugger_2017/libipt/intel64/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/../tbb/lib/intel64_lin/gcc4.4
MIC_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin_mic:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/lib/mic
CPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/ipp/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb/include:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/include
MPI_PER_NODE=2
NUMMIC=2
NLSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/compiler/lib/intel64/locale/%l_%t/%N:/opt/intel/compilers_and_libraries_2017.6.256/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64_mic/share/locale/%l_%t/%N:/opt/intel/debugger_2017/gdb/intel64/share/locale/%l_%t/%N
PATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/bin/intel64:/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/bin:/opt/intel/debugger_2017/gdb/intel64_mic/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
LC_IDENTIFICATION=fr_FR.UTF-8
TBBROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/tbb
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
LANG=en_US.UTF-8
GDB_CROSS=/opt/intel/debugger_2017/gdb/intel64_mic/bin/gdb-mic
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=
DAALROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/daal
HISTCONTROL=ignoredups
MPM_LAUNCHER=/opt/intel/debugger_2017/mpm/mic/bin/start_mpm.sh
INTEL_PYTHONHOME=/opt/intel/debugger_2017/python/intel64/
HOME=/home/lmontigny
SHLVL=2
KMP_AFFINITY=scatter
LOGNAME=lmontigny
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.75 58557 10.237.240.141 22
CLASSPATH=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi/intel64/lib/mpi.jar:/opt/intel/compilers_and_libraries_2017.6.256/linux/daal/lib/daal.jar
MODULESHOME=/usr/share/Modules
LESSOPEN=||/usr/bin/lesspipe.sh %s
INFOPATH=/opt/intel/documentation_2017/en/debugger//gdb-ia/info/:/opt/intel/documentation_2017/en/debugger//gdb-mic/info/:/opt/intel/documentation_2017/en/debugger//gdb-igfx/info/
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
I_MPI_ROOT=/opt/intel/compilers_and_libraries_2017.6.256/linux/mpi
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
MPI_RANK_FOR_NODE=0 NODE=0, CORE=, MIC=0, SHARE=
MPI_RANK_FOR_NODE=1 NODE=1, CORE=, MIC=1, SHARE=
Number of Intel(R) Xeon Phi(TM) coprocessors : 0
================================================================================
HPLinpack 2.1  --  High-Performance Linpack benchmark  --   October 26, 2012
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N        :   60000 
NB       :     192 
PMAP     : Column-major process mapping
P        :       1 
Q        :       1 
PFACT    :   Right 
NBMIN    :       2 
NDIV     :       2 
RFACT    :   Crout 
BCAST    :   1ring 
DEPTH    :       0 
SWAP     : Binary-exchange
L1       : no-transposed form
U        : no-transposed form
EQUIL    : no
ALIGN    :    8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

skl2            : Column=000384 Fraction=0.005 Kernel=    0.09 Mflops=2621422.02
skl2            : Column=000768 Fraction=0.010 Kernel=1442033.38 Mflops=1864058.02
skl2            : Column=000960 Fraction=0.015 Kernel=1458850.49 Mflops=1767154.35
skl2            : Column=001344 Fraction=0.020 Kernel=1464168.16 Mflops=1670011.62
skl2            : Column=001536 Fraction=0.025 Kernel=1324239.64 Mflops=1618384.22
skl2            : Column=001920 Fraction=0.030 Kernel=1449652.86 Mflops=1582500.61
skl2            : Column=002112 Fraction=0.035 Kernel=1451141.49 Mflops=1569999.51
skl2            : Column=002496 Fraction=0.040 Kernel=1440825.16 Mflops=1549393.41
skl2            : Column=002880 Fraction=0.045 Kernel=1435963.87 Mflops=1533922.08
skl2            : Column=003072 Fraction=0.050 Kernel=1427270.84 Mflops=1527138.53
skl2            : Column=003456 Fraction=0.055 Kernel=1462537.54 Mflops=1520068.44
skl2            : Column=003648 Fraction=0.060 Kernel=1409681.72 Mflops=1514195.02
skl2            : Column=004032 Fraction=0.065 Kernel=1403637.87 Mflops=1503618.45
skl2            : Column=004224 Fraction=0.070 Kernel=1566197.09 Mflops=1506165.57
skl2            : Column=004608 Fraction=0.075 Kernel=1389294.16 Mflops=1496434.30
skl2            : Column=004992 Fraction=0.080 Kernel=1449321.22 Mflops=1492996.32
skl2            : Column=005184 Fraction=0.085 Kernel=1511763.67 Mflops=1493624.22
skl2            : Column=005568 Fraction=0.090 Kernel=1427778.71 Mflops=1489310.28
skl2            : Column=005760 Fraction=0.095 Kernel=1355449.01 Mflops=1484890.75
skl2            : Column=006144 Fraction=0.100 Kernel=1460003.27 Mflops=1483467.53
skl2            : Column=006336 Fraction=0.105 Kernel=1431369.73 Mflops=1482006.40
skl2            : Column=006720 Fraction=0.110 Kernel=1452450.18 Mflops=1480473.87
skl2            : Column=006912 Fraction=0.115 Kernel=1456675.00 Mflops=1479880.44
skl2            : Column=007296 Fraction=0.120 Kernel=1399041.45 Mflops=1475931.09
skl2            : Column=007680 Fraction=0.125 Kernel=1425531.84 Mflops=1473657.03
skl2            : Column=007872 Fraction=0.130 Kernel=1445384.26 Mflops=1473048.23
skl2            : Column=008256 Fraction=0.135 Kernel=1472544.45 Mflops=1473028.01
skl2            : Column=008448 Fraction=0.140 Kernel=1450744.78 Mflops=1472588.07
skl2            : Column=008832 Fraction=0.145 Kernel=1439163.97 Mflops=1471322.26
skl2            : Column=009024 Fraction=0.150 Kernel=1353912.85 Mflops=1469031.09
skl2            : Column=009408 Fraction=0.155 Kernel=1492166.37 Mflops=1469813.75
skl2            : Column=009792 Fraction=0.160 Kernel=1432749.91 Mflops=1468570.70
skl2            : Column=009984 Fraction=0.165 Kernel=1414235.89 Mflops=1467673.22
skl2            : Column=010368 Fraction=0.170 Kernel=1482422.38 Mflops=1468118.84
skl2            : Column=010560 Fraction=0.175 Kernel=1315955.45 Mflops=1465601.59
skl2            : Column=010944 Fraction=0.180 Kernel=1481578.94 Mflops=1466052.58
skl2            : Column=011136 Fraction=0.185 Kernel=1458667.58 Mflops=1465949.41
skl2            : Column=011520 Fraction=0.190 Kernel=1422717.19 Mflops=1464759.19
skl2            : Column=011712 Fraction=0.195 Kernel=1447397.58 Mflops=1464530.12
skl2            : Column=012096 Fraction=0.200 Kernel=1466795.32 Mflops=1464586.94
skl2            : Column=012480 Fraction=0.205 Kernel=1412434.40 Mflops=1463283.34
skl2            : Column=012672 Fraction=0.210 Kernel=1414292.82 Mflops=1462686.58
skl2            : Column=013056 Fraction=0.215 Kernel=1438963.08 Mflops=1462138.38
skl2            : Column=013248 Fraction=0.220 Kernel=1470744.76 Mflops=1462233.42
skl2            : Column=013632 Fraction=0.225 Kernel=1428551.64 Mflops=1461493.54
skl2            : Column=013824 Fraction=0.230 Kernel=1604103.02 Mflops=1462858.07
skl2            : Column=014208 Fraction=0.235 Kernel=1409403.52 Mflops=1461732.47
skl2            : Column=014592 Fraction=0.240 Kernel=1435747.85 Mflops=1461214.81
skl2            : Column=014784 Fraction=0.245 Kernel=1522851.69 Mflops=1461781.11
skl2            : Column=015168 Fraction=0.250 Kernel=1376946.07 Mflops=1460112.36
skl2            : Column=015360 Fraction=0.255 Kernel=1586625.04 Mflops=1461169.53
skl2            : Column=015744 Fraction=0.260 Kernel=1430309.25 Mflops=1460614.90
skl2            : Column=015936 Fraction=0.265 Kernel=1381585.95 Mflops=1459895.80
skl2            : Column=016320 Fraction=0.270 Kernel=1412252.91 Mflops=1459073.09
skl2            : Column=016512 Fraction=0.275 Kernel=1549353.78 Mflops=1459768.91
skl2            : Column=016896 Fraction=0.280 Kernel=1403504.42 Mflops=1458839.70
skl2            : Column=017280 Fraction=0.285 Kernel=1482970.86 Mflops=1459204.61
skl2            : Column=017472 Fraction=0.290 Kernel=1381817.21 Mflops=1458589.98
skl2            : Column=017856 Fraction=0.295 Kernel=1437345.46 Mflops=1458274.68
skl2            : Column=018048 Fraction=0.300 Kernel=1493438.86 Mflops=1458520.68
skl2            : Column=018432 Fraction=0.305 Kernel=1430680.51 Mflops=1458125.30
skl2            : Column=018624 Fraction=0.310 Kernel=1374294.62 Mflops=1457518.56
skl2            : Column=019008 Fraction=0.315 Kernel=1467637.27 Mflops=1457652.03
skl2            : Column=019392 Fraction=0.320 Kernel=1402869.50 Mflops=1456919.98
skl2            : Column=019584 Fraction=0.325 Kernel=1529388.49 Mflops=1457355.24
skl2            : Column=019968 Fraction=0.330 Kernel=1400455.92 Mflops=1456628.79
skl2            : Column=020160 Fraction=0.335 Kernel=1445230.57 Mflops=1456559.70
skl2            : Column=020544 Fraction=0.340 Kernel=1466096.26 Mflops=1456670.71
skl2            : Column=020736 Fraction=0.345 Kernel=1411617.22 Mflops=1456403.91
skl2            : Column=021120 Fraction=0.350 Kernel=1405780.38 Mflops=1455817.50
skl2            : Column=021312 Fraction=0.355 Kernel=1587660.95 Mflops=1456480.36
skl2            : Column=021696 Fraction=0.360 Kernel=1419429.09 Mflops=1456074.31
skl2            : Column=022080 Fraction=0.365 Kernel=1401490.42 Mflops=1455486.87
skl2            : Column=022272 Fraction=0.370 Kernel=1464060.22 Mflops=1455530.15
skl2            : Column=022656 Fraction=0.375 Kernel=1442250.08 Mflops=1455397.45
skl2            : Column=022848 Fraction=0.380 Kernel=1452819.77 Mflops=1455384.92
skl2            : Column=023232 Fraction=0.385 Kernel=1421929.22 Mflops=1455060.94
skl2            : Column=023424 Fraction=0.390 Kernel=1504872.58 Mflops=1455284.29
skl2            : Column=023808 Fraction=0.395 Kernel=1421981.84 Mflops=1454976.06
skl2            : Column=024192 Fraction=0.400 Kernel=1405699.10 Mflops=1454528.48
skl2            : Column=024384 Fraction=0.405 Kernel=1475103.56 Mflops=1454615.74
skl2            : Column=024768 Fraction=0.410 Kernel=1407657.78 Mflops=1454208.65
skl2            : Column=024960 Fraction=0.415 Kernel=1362950.10 Mflops=1453808.48
skl2            : Column=025344 Fraction=0.420 Kernel=1463290.15 Mflops=1453884.06
skl2            : Column=025536 Fraction=0.425 Kernel=1434674.45 Mflops=1453807.57
skl2            : Column=025920 Fraction=0.430 Kernel=1434933.12 Mflops=1453660.91
skl2            : Column=026112 Fraction=0.435 Kernel=1421953.48 Mflops=1453539.15
skl2            : Column=026496 Fraction=0.440 Kernel=1457520.04 Mflops=1453568.26
skl2            : Column=026880 Fraction=0.445 Kernel=1388793.05 Mflops=1453086.04
skl2            : Column=027072 Fraction=0.450 Kernel=1477954.02 Mflops=1453171.23
skl2            : Column=027456 Fraction=0.455 Kernel=1419514.49 Mflops=1452936.95
skl2            : Column=027648 Fraction=0.460 Kernel=1517169.40 Mflops=1453141.80
skl2            : Column=028032 Fraction=0.465 Kernel=1404086.73 Mflops=1452811.92
skl2            : Column=028224 Fraction=0.470 Kernel=1456676.99 Mflops=1452824.18
skl2            : Column=028608 Fraction=0.475 Kernel=1414776.89 Mflops=1452581.61
skl2            : Column=028992 Fraction=0.480 Kernel=1463356.37 Mflops=1452646.03
skl2            : Column=029184 Fraction=0.485 Kernel=1408404.84 Mflops=1452511.55
skl2            : Column=029568 Fraction=0.490 Kernel=1420218.56 Mflops=1452321.59
skl2            : Column=029760 Fraction=0.495 Kernel=1496921.44 Mflops=1452443.38
skl2            : Column=030912 Fraction=0.515 Kernel=1399259.25 Mflops=1451566.59
skl2            : Column=032256 Fraction=0.535 Kernel=1421479.95 Mflops=1451052.78
skl2            : Column=033408 Fraction=0.555 Kernel=1435560.33 Mflops=1450850.21
skl2            : Column=034560 Fraction=0.575 Kernel=1422618.61 Mflops=1450512.71
skl2            : Column=035712 Fraction=0.595 Kernel=1413054.39 Mflops=1450105.39
skl2            : Column=037056 Fraction=0.615 Kernel=1402709.01 Mflops=1449565.13
skl2            : Column=038208 Fraction=0.635 Kernel=1404800.20 Mflops=1449176.77
skl2            : Column=039360 Fraction=0.655 Kernel=1402842.97 Mflops=1448817.43
skl2            : Column=040512 Fraction=0.675 Kernel=1408943.68 Mflops=1448543.94
skl2            : Column=041856 Fraction=0.695 Kernel=1418288.82 Mflops=1448333.86
skl2            : Column=047808 Fraction=0.795 Kernel=1368748.90 Mflops=1446699.79
skl2            : Column=053760 Fraction=0.895 Kernel=1138160.61 Mflops=1443852.89
skl2            : Column=059712 Fraction=0.995 Kernel=523777.01 Mflops=1441005.81
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WC00C2R2       60000   192     1     1             100.09            1.43880e+03
HPL_pdgesv() start time Fri Feb  2 17:28:08 2018

HPL_pdgesv() end time   Fri Feb  2 17:29:48 2018

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=        0.0043047 ...... PASSED
================================================================================

Finished      1 tests with the following results:
              1 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
Done: Fri Feb  2 17:29:58 CET 2018
This run was done on: Mon Feb  5 11:33:09 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.164 63546 22
TMPDIR=/tmp
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
MPI_PER_NODE=2
NUMMIC=2
PATH=/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
LC_IDENTIFICATION=fr_FR.UTF-8
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
LANG=en_US.UTF-8
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=
HISTCONTROL=ignoredups
HOME=/home/lmontigny
SHLVL=2
LOGNAME=lmontigny
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.164 63546 10.237.240.141 22
MODULESHOME=/usr/share/Modules
LESSOPEN=||/usr/bin/lesspipe.sh %s
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
Done: Mon Feb  5 11:33:09 CET 2018
This run was done on: Mon Feb  5 11:33:43 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MANPATH=/usr/share/man/mpich-3.2:/usr/share/man:/usr/local/share/man
MPI_INCLUDE=/usr/include/mpich-3.2-x86_64
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.164 63546 22
TMPDIR=/tmp
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
MPI_PYTHON_SITEARCH=/usr/lib64/python2.7/site-packages/mpich-3.2
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/usr/lib64/mpich-3.2/lib
MPI_PER_NODE=2
MPI_LIB=/usr/lib64/mpich-3.2/lib
NUMMIC=2
PATH=/usr/lib64/mpich-3.2/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
MPI_BIN=/usr/lib64/mpich-3.2/bin
LC_IDENTIFICATION=fr_FR.UTF-8
MPI_COMPILER=mpich-3.2-x86_64
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
_LMFILES_=/etc/modulefiles/mpi/mpich-3.2-x86_64
LANG=en_US.UTF-8
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=mpi/mpich-3.2-x86_64
HISTCONTROL=ignoredups
MPI_SYSCONFIG=/etc/mpich-3.2-x86_64
HOME=/home/lmontigny
SHLVL=2
MPI_SUFFIX=_mpich-3.2
MPI_MAN=/usr/share/man/mpich-3.2
LOGNAME=lmontigny
PYTHONPATH=/usr/lib64/python2.7/site-packages/mpich-3.2
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.164 63546 10.237.240.141 22
MODULESHOME=/usr/share/Modules
MPI_FORTRAN_MOD_DIR=/usr/lib64/gfortran/modules/mpich-3.2-x86_64
MPI_HOME=/usr/lib64/mpich-3.2
LESSOPEN=||/usr/bin/lesspipe.sh %s
PKG_CONFIG_PATH=/usr/lib64/mpich-3.2/lib/pkgconfig
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
Done: Mon Feb  5 11:33:43 CET 2018
This run was done on: Mon Feb  5 11:34:44 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MANPATH=/usr/share/man/mpich-3.2:/usr/share/man:/usr/local/share/man
MPI_INCLUDE=/usr/include/mpich-3.2-x86_64
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.164 63546 22
TMPDIR=/tmp
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
MPI_PYTHON_SITEARCH=/usr/lib64/python2.7/site-packages/mpich-3.2
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/usr/lib64/mpich-3.2/lib
MPI_PER_NODE=2
MPI_LIB=/usr/lib64/mpich-3.2/lib
NUMMIC=2
PATH=/usr/lib64/mpich-3.2/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
MPI_BIN=/usr/lib64/mpich-3.2/bin
LC_IDENTIFICATION=fr_FR.UTF-8
MPI_COMPILER=mpich-3.2-x86_64
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
_LMFILES_=/etc/modulefiles/mpi/mpich-3.2-x86_64
LANG=en_US.UTF-8
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=mpi/mpich-3.2-x86_64
HISTCONTROL=ignoredups
MPI_SYSCONFIG=/etc/mpich-3.2-x86_64
HOME=/home/lmontigny
SHLVL=2
MPI_SUFFIX=_mpich-3.2
MPI_MAN=/usr/share/man/mpich-3.2
LOGNAME=lmontigny
PYTHONPATH=/usr/lib64/python2.7/site-packages/mpich-3.2
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.164 63546 10.237.240.141 22
MODULESHOME=/usr/share/Modules
MPI_FORTRAN_MOD_DIR=/usr/lib64/gfortran/modules/mpich-3.2-x86_64
MPI_HOME=/usr/lib64/mpich-3.2
LESSOPEN=||/usr/bin/lesspipe.sh %s
PKG_CONFIG_PATH=/usr/lib64/mpich-3.2/lib/pkgconfig
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
Done: Mon Feb  5 11:34:44 CET 2018
This run was done on: Mon Feb  5 11:35:34 CET 2018
HPL.dat: 
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
60000         Ns
1            # of NBs
192 256      NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
1 2          Ps
1 2          Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
Binary name: 
-rwxr-xr-x 1 lmontigny lmontigny 12257906 Feb  2 17:14 xhpl_intel64_dynamic
This script: 
#!/bin/bash
#===============================================================================
# Copyright 2001-2017 Intel Corporation All Rights Reserved.
#
# The source code,  information  and material  ("Material") contained  herein is
# owned by Intel Corporation or its  suppliers or licensors,  and  title to such
# Material remains with Intel  Corporation or its  suppliers or  licensors.  The
# Material  contains  proprietary  information  of  Intel or  its suppliers  and
# licensors.  The Material is protected by  worldwide copyright  laws and treaty
# provisions.  No part  of  the  Material   may  be  used,  copied,  reproduced,
# modified, published,  uploaded, posted, transmitted,  distributed or disclosed
# in any way without Intel's prior express written permission.  No license under
# any patent,  copyright or other  intellectual property rights  in the Material
# is granted to  or  conferred  upon  you,  either   expressly,  by implication,
# inducement,  estoppel  or  otherwise.  Any  license   under such  intellectual
# property rights must be express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing,  you may not remove or alter this
# notice or  any  other  notice   embedded  in  Materials  by  Intel  or Intel's
# suppliers or licensors in any way.
#===============================================================================

#
echo "This is a SAMPLE run script.  Change it to reflect the correct number"
echo "of CPUs/threads, number of nodes, MPI processes per node, etc.."

# Set total number of MPI processes for the HPL (should be equal to PxQ).
export MPI_PROC_NUM=2

# Set the MPI per node and number of MICs attached to each node.
# MPI_PER_NODE should be equal to 1 or number of sockets in the system. Otherwise,
# the HPL performance will be low. 
# MPI_PER_NODE is same as -perhost or -ppn paramaters in mpirun/mpiexec
export MPI_PER_NODE=2

# Set number of MICs that HPL will access per node
export NUMMIC=2

#
# You can find description of all Intel MPI parameters in the
# Intel MPI Reference Manual.
# See <intel mpi installdir>/doc/Reference_manual.pdf
export I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360

#         "export I_MPI_PIN_CELL=core"
#         You can use this variable (beginning Intel MPI 4.0.1 for cases if HT is enabled. 
#         The variable forces to pin MPI processes and threads to real cores, 
#         so logical processors will not be involved.
#         It can be used together with the variable below, when Hydra Process Manager:
#         "export I_MPI_PIN_DOMAIN=auto" This allows uniform distribution of
#	      the processes and thread domains

# export I_MPI_EAGER_THRESHOLD=128000
#          This setting may give 1-2% of performance increase over the
#          default value of 262000 for large problems and high number of cores

export OUT=xhpl_intel64_dynamic_outputs.txt
export HPL_EXE=xhpl_intel64_dynamic

echo -n "This run was done on: "
date

# Capture some meaningful data for future reference:
echo -n "This run was done on: " >> $OUT
date >> $OUT
echo "HPL.dat: " >> $OUT
cat HPL.dat >> $OUT
echo "Binary name: " >> $OUT
ls -l xhpl_intel64_dynamic >> $OUT
echo "This script: " >> $OUT
cat runme_intel64_dynamic >> $OUT
echo "Environment variables: " >> $OUT
env >> $OUT
echo "Actual run: " >> $OUT

# Environment variables can also be also be set on the Intel MPI command line
# using the -genv option (to appear before the -np 1):

# mpirun -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

# In case of multiple nodes involved, please set the number of MPI processes
# per node (ppn=1,2 typically) through the -perhost option (because the
# default is all cores):

mpirun -perhost ${MPI_PER_NODE} -np ${MPI_PROC_NUM} ./runme_intel64_prv "$@" | tee -a $OUT

echo -n "Done: " >> $OUT
date >> $OUT

echo -n "Done: "
date
Environment variables: 
LC_PAPER=fr_FR.UTF-8
MANPATH=/usr/share/man/openmpi-x86_64:/usr/share/man:/usr/local/share/man
MPI_INCLUDE=/usr/include/openmpi-x86_64
MPI_PROC_NUM=2
LC_ADDRESS=fr_FR.UTF-8
LC_MONETARY=fr_FR.UTF-8
HOSTNAME=skl2.imu.intel.com
SHELL=/bin/bash
TERM=screen-256color
HISTSIZE=1000
SSH_CLIENT=172.28.228.164 63546 22
TMPDIR=/tmp
LC_NUMERIC=fr_FR.UTF-8
OUT=xhpl_intel64_dynamic_outputs.txt
QTDIR=/usr/lib64/qt-3.3
QTINC=/usr/lib64/qt-3.3/include
SSF_VERSION=core-2016.0:hpc-cluster-2016.0:compat-base-2016.0:compat-hpc-2016.0
SSH_TTY=/dev/pts/1
QT_GRAPHICSSYSTEM_CHECKED=1
USER=lmontigny
MPI_PYTHON_SITEARCH=/usr/lib64/python2.7/site-packages/openmpi
LC_TELEPHONE=fr_FR.UTF-8
LS_COLORS=rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:
LD_LIBRARY_PATH=/usr/lib64/openmpi/lib
MPI_PER_NODE=2
MPI_LIB=/usr/lib64/openmpi/lib
NUMMIC=2
PATH=/usr/lib64/openmpi/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/lmontigny/bin
MAIL=/var/spool/mail/lmontigny
I_MPI_DAPL_DIRECT_COPY_THRESHOLD=655360
MPI_BIN=/usr/lib64/openmpi/bin
LC_IDENTIFICATION=fr_FR.UTF-8
MPI_COMPILER=openmpi-x86_64
HPL_EXE=xhpl_intel64_dynamic
PWD=/home/lmontigny/Benchmarks/HPC/mp_linpack
_LMFILES_=/etc/modulefiles/mpi/openmpi-x86_64
LANG=en_US.UTF-8
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles
LC_MEASUREMENT=fr_FR.UTF-8
KDEDIRS=/usr
LOADEDMODULES=mpi/openmpi-x86_64
HISTCONTROL=ignoredups
MPI_SYSCONFIG=/etc/openmpi-x86_64
HOME=/home/lmontigny
SHLVL=2
MPI_SUFFIX=_openmpi
MPI_MAN=/usr/share/man/openmpi-x86_64
LOGNAME=lmontigny
PYTHONPATH=/usr/lib64/python2.7/site-packages/openmpi
QTLIB=/usr/lib64/qt-3.3/lib
SSH_CONNECTION=172.28.228.164 63546 10.237.240.141 22
MODULESHOME=/usr/share/Modules
MPI_FORTRAN_MOD_DIR=/usr/lib64/gfortran/modules/openmpi-x86_64
MPI_HOME=/usr/lib64/openmpi
LESSOPEN=||/usr/bin/lesspipe.sh %s
QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins
LC_NAME=fr_FR.UTF-8
BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*`
}
_=/usr/bin/env
Actual run: 
Done: Mon Feb  5 11:35:34 CET 2018
