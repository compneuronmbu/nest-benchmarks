<?xml version="1.0" encoding="UTF-8"?>
<jube>
  <benchmark name="hpc_benchmark" outpath="bench_run">
    <comment>HPC benchmark (slurm)</comment>

    <!-- Configuration -->
    <parameterset name="param_set">
      <parameter name="scale">1.0,1.0,1.0</parameter>
      <parameter name="simtime">100.</parameter>
    </parameterset>

    <!-- Job configuration -->
    <parameterset name="executeset">
      <parameter name="job_file">job.run</parameter>
      <parameter name="compute_nodes" type="int">1</parameter>
      <parameter name="tasks_per_node" type="int">1</parameter>
      <parameter name="cpus_per_task" type="int">16</parameter>
      <parameter name="walltime">00:15:00</parameter>
      <parameter name="mem">31GB</parameter>
      <parameter name="readyfile">ready</parameter>
    </parameterset>

    <!-- Load jobfile -->
    <fileset name="files">
      <copy>${job_file}.in</copy>
    </fileset>

    <!-- Substitute jobfile -->
    <substituteset name="sub_job">
      <iofile in="${job_file}.in" out="$job_file" />
      <sub source="{{NODES}}" dest="$compute_nodes" />
      <sub source="{{TASKS_PER_NODE}}" dest="$tasks_per_node" />
      <sub source="{{CPUS_PER_TASK}}" dest="$cpus_per_task" />
      <sub source="{{WALLTIME}}" dest="$walltime" />
      <sub source="{{MEM}}" dest="$mem" />
      <sub source="{{SCALE}}" dest="$scale" />
      <sub source="{{SIMTIME}}" dest="$simtime" />
      <sub source="{{READY}}" dest="$readyfile" />
    </substituteset>

    <!-- Operation -->
    <step name="run_bench">
      <use>param_set</use>
      <use>executeset</use>
      <use>files,sub_job</use>
      <do done_file="$readyfile">sbatch --output=slurm_output.out $job_file</do>
    </step>

    <!-- Regex pattern -->
    <patternset name="pattern">
      <pattern name="git">GIT: \((.+)\)</pattern>
      <pattern name="neurons" type="int">0 $jube_pat_int # num_neurons</pattern>
      <pattern name="conns" type="int">0 $jube_pat_int # num_connections</pattern>
      <pattern name="spikes" type="int">0 $jube_pat_int # local_spike_counter</pattern>
      <pattern name="rate" type="float">0 $jube_pat_fp # average rate</pattern>
      <pattern name="nodes" type="float">0 $jube_pat_fp # build_time_nodes</pattern>
      <pattern name="edges" type="float">0 $jube_pat_fp # build_edge_time</pattern>
      <pattern name="init" type="float">0 $jube_pat_fp # init_time</pattern>
      <pattern name="sim" type="float">0 $jube_pat_fp # sim_time</pattern>
      <pattern name="memory" type="int">0 $jube_pat_int # virt_mem_after_sim</pattern>
    </patternset>

    <!-- Analyse -->
    <analyser name="analyse">
      <use>pattern</use>
      <analyse step="run_bench">
        <file>slurm_output.out</file>
      </analyse>
    </analyser>

    <!-- Create result table -->
    <result>
      <use>analyse</use>
      <table name="result" style="csv" sort="cpus_per_task">
        <column>git</column>
        <column>scale</column>
        <column>compute_nodes</column>
        <column>cpus_per_task</column>
        <column>neurons</column>
        <column>conns</column>
        <column>spikes</column>
        <column>rate</column>
        <column>nodes</column>
        <column>edges</column>
        <column>init</column>
        <column>sim</column>
        <column>memory</column>
      </table>
    </result>
  </benchmark>
</jube>
